"use strict";(self.webpackChunkoverture_how_to=self.webpackChunkoverture_how_to||[]).push([[886],{5235:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>u,default:()=>y,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var r=t(5893),a=t(1151),s=t(8859);const i="CREATE EXTERNAL TABLE `overture` (\n  `id` string,\n  `geometry` binary,\n  `bbox` struct<minx:double,maxx:double,miny:double,maxy:double>,\n  `subtype` string,\n  `localitytype` string,\n  `names` struct<primary:string,common:map<string,string>,rules:array<struct<variant:string,language:string,value:string,at:array<double>,side:string>>>,\n  `contextid` string,\n  `adminlevel` int,\n  `isocountrycodealpha2` string,\n  `isosubcountrycode` string,\n  `defaultlanguage` string,\n  `drivingside` string,\n  `version` int,\n  `updatetime` string,\n  `sources` array<struct<property:string,dataset:string,recordId:string,confidence:double>>,\n  `ismaritime` boolean,\n  `geopoldisplay` string,\n  `localityid` string,\n  `class` string,\n  `sourcetags` map<string,string>,\n  `wikidata` string,\n  `surface` string,\n  `elevation` int,\n  `issalt` boolean,\n  `isintermittent` boolean,\n  `hasparts` boolean,\n  `height` double,\n  `numfloors` int,\n  `facadecolor` string,\n  `facadematerial` string,\n  `roofmaterial` string,\n  `roofshape` string,\n  `roofdirection` double,\n  `rooforientation` string,\n  `roofcolor` string,\n  `eaveheight` double,\n  `level` int,\n  `minheight` double,\n  `buildingid` string,\n  `categories` struct<main:string,alternate:array<string>>,\n  `confidence` double,\n  `websites` array<string>,\n  `socials` array<string>,\n  `emails` array<string>,\n  `phones` array<string>,\n  `brand` struct<names:struct<common:array<struct<value:string,language:string>>,official:array<struct<value:string,language:string>>,alternate:array<struct<value:string,language:string>>,short:array<struct<value:string,language:string>>>,wikidata:string>,\n  `addresses` array<struct<freeform:string,locality:string,postcode:string,region:string,country:string>>,\n  `connectors` array<string>,\n  `road` string)\nPARTITIONED BY (\n  `theme` string,\n  `type` string)\nSTORED AS PARQUET\nLOCATION\n  's3://overturemaps-us-west-2/release/__OVERTURE_RELEASE'\n",o="SELECT TOP 10 *\nFROM\n    OPENROWSET(\n        BULK 'https://overturemapswestus2.blob.core.windows.net/release/__OVERTURE_RELEASE/theme=places/type=place/',\n        FORMAT = 'PARQUET'\n    )\nWITH\n    (\n        names VARCHAR(MAX),\n        categories VARCHAR(MAX),\n        websites VARCHAR(MAX),\n        phones VARCHAR(MAX),\n        bbox VARCHAR(200),\n        geometry VARBINARY(MAX)\n    )\n    AS\n        [result]\nWHERE\n        TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.minx')) > -122.4447744\n    AND TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.maxx')) < -122.2477071\n    AND TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.miny')) > 47.5621587\n    AND TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.maxy')) < 47.7120663\n",l="SELECT\n       CAST(names AS JSON),\n       geometry -- WKB\nFROM\n       overture\nWHERE\n       theme = 'places'\n   AND bbox.minX > -122.4447744\n   AND bbox.maxX < -122.2477071\n   AND bbox.minY > 47.5621587\n   AND bbox.maxY < 47.7120663\n",c={title:"Querying Data in the Cloud"},u=void 0,d={id:"accessing-data/cloud-services",title:"Querying Data in the Cloud",description:"You can access and query Overture parquet files directly in the cloud using one of the SQL query options documented below. You'll need an AWS account or a Microsoft Azure account.",source:"@site/docs/accessing-data/cloud-services.mdx",sourceDirName:"accessing-data",slug:"/accessing-data/cloud-services",permalink:"/how-to/accessing-data/cloud-services",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Querying Data in the Cloud"},sidebar:"docs",previous:{title:"Getting Overture Data",permalink:"/how-to/accessing-data/"},next:{title:"Querying Data Locally",permalink:"/how-to/accessing-data/locally"}},g={},h=[{value:"Amazon Athena",id:"amazon-athena",level:2},{value:"Microsft Synapse",id:"microsft-synapse",level:2}];function m(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"You can access and query Overture parquet files directly in the cloud using one of the SQL query options documented below. You'll need an AWS account or a Microsoft Azure account."}),"\n",(0,r.jsx)(n.h2,{id:"amazon-athena",children:"Amazon Athena"}),"\n",(0,r.jsx)(n.p,{children:"Run the set-up query below in the Athena Query Console. It will create tables in your AWS account's data catalog pointing directly to data hosted on Overture's S3 bucket. You can then query Overture data directly from Athena without needing to copy it."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"TIP: Athena only allows one SQL statement to be run at a time, so highlight and run each SQL query separately."}),"\n",(0,r.jsxs)(n.li,{children:["TIP: Overture's S3 bucket is located in the us-west-2 AWS region, so use Athena in ",(0,r.jsx)(n.code,{children:"us-west-2"})," for best performance."]}),"\n"]}),"\n",(0,r.jsx)(s.Z,{query:i}),"\n",(0,r.jsxs)(n.p,{children:["After you run the set-up query, you can load the partitions by running ",(0,r.jsx)(n.code,{children:"MSCK REPAIR TABLE overture"}),' or choosing "Load Partitions" from the table options menu.']}),"\n",(0,r.jsx)(n.p,{children:"Example Athena SQL query to download a CSV of places in Seattle:"}),"\n",(0,r.jsx)(s.Z,{query:l}),"\n",(0,r.jsxs)(n.p,{children:["More information on using Athena is available in the ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/athena/latest/ug/what-is.html",children:"Amazon Athena User Guide"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"microsft-synapse",children:"Microsft Synapse"}),"\n",(0,r.jsxs)(n.p,{children:["In your Azure account, create a ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/synapse-analytics/get-started-create-workspace",children:"Synapse workspace"}),". You can then run this SQL query to read places in Seattle:"]}),"\n",(0,r.jsx)(s.Z,{query:o}),"\n",(0,r.jsxs)(n.p,{children:["More information is available at ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/training/modules/query-data-lake-using-azure-synapse-serverless-sql-pools/3-query-files",children:'"Query files using a serverless SQL pool"'})," on Microsoft Learn."]})]})}function y(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8859:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(9286),a=t(2263),s=t(5893);function i(e){const{siteConfig:{customFields:n}}=(0,a.Z)();return(0,s.jsx)(r.Z,{language:"sql",title:e.title,children:e.query.replace("__OVERTURE_RELEASE",n.overtureRelease)})}}}]);