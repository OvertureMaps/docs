"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[2307],{2594:(e,t,i)=>{i.d(t,{A:()=>d});var r=i(58069),s=i(40797),n=i(74848);function d(e){const{siteConfig:{customFields:t}}=(0,s.A)();var i=e.query.replaceAll("__OVERTURE_RELEASE",t.overtureRelease);i=(i=i.replaceAll("__ATHENA_OVERTURE_RELEASE","v"+t.overtureRelease.replaceAll(".","_").replaceAll("-","_"))).replaceAll("__PMTILES_OVERTURE_RELEASE",t.overtureRelease.split(".",1));var d=e.language||"sql";return(0,n.jsx)(r.default,{language:d,title:e.title,children:i})}},45191:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>f,default:()=>y,frontMatter:()=>j,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"guides/buildings","title":"Buildings","description":"Over 2.6B buildings globally","source":"@site/docs/guides/buildings.mdx","sourceDirName":"guides","slug":"/guides/buildings","permalink":"/guides/buildings","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752180088000,"frontMatter":{"title":"Buildings","description":"Over 2.6B buildings globally"},"sidebar":"docs","previous":{"title":"Base","permalink":"/guides/base"},"next":{"title":"Divisions","permalink":"/guides/divisions"}}');var s=i(74848),n=i(28453),d=i(65537),l=i(79329),o=i(2594),a=(i(39324),i(29030),i(96540)),h=i(16443),c=i.n(h),u=i(40056),x=i(40797);function g(){const e=(0,a.useRef)(null),t=(0,a.useRef)(null),[i]=(0,a.useState)(-117.05154),[r]=(0,a.useState)(32.58453),[n]=(0,a.useState)(14),{siteConfig:{customFields:d}}=(0,x.A)();return(0,a.useEffect)((()=>{if(t.current)return;let s=new u.Zs;c().addProtocol("pmtiles",s.tile),t.current=new(c().Map)({container:e.current,center:[i,r],zoom:n,minZoom:2,maxZoom:18,pitch:60,hash:!0,cooperativeGestures:{windowsHelpText:"Use Ctrl + scroll to zoom the map.",macHelpText:"Use \u2318 + scroll to zoom the map.",mobileHelpText:"Use 2 fingers to move the map."},style:{light:{anchor:"viewport",color:"white",intensity:.5},version:8,glyphs:"https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf",sources:{buildings:{type:"vector",url:"pmtiles://"+d.pmtiles_path+"/buildings.pmtiles"},transportation:{type:"vector",url:"pmtiles://"+d.pmtiles_path+"/transportation.pmtiles"},divisions:{type:"vector",url:"pmtiles://"+d.pmtiles_path+"/divisions.pmtiles"},base:{type:"vector",url:"pmtiles://"+d.pmtiles_path+"/base.pmtiles"}},layers:[{id:"background",type:"background",minzoom:0,maxzoom:24,paint:{"background-color":"hsl(216,20%,95%)"}},{id:"land",type:"fill",source:"base","source-layer":"land",paint:{"fill-color":"hsla(97, 13%, 66%, 1)","fill-outline-color":"hsl(216, 30%, 95%)","fill-opacity":.1}},{id:"transportation",type:"line",source:"transportation","source-layer":"segment",paint:{"line-color":"#333","line-opacity":.2}},{id:"osm-buildings",type:"fill-extrusion",minzoom:10,maxzoom:18,source:"buildings","source-layer":"building",filter:["==","OpenStreetMap",["get","@geometry_source"]],paint:{"fill-extrusion-color":"rgb(194,42,87)","fill-extrusion-opacity":1,"fill-extrusion-base":0,"fill-extrusion-height":["case",["has","height"],["to-number",["get","height"]],3.2]}},{id:"esri-buildings",type:"fill-extrusion",minzoom:10,maxzoom:18,source:"buildings","source-layer":"building",filter:["==","Esri Community Maps",["get","@geometry_source"]],paint:{"fill-extrusion-color":"rgb(4,151,188)","fill-extrusion-opacity":1,"fill-extrusion-base":0,"fill-extrusion-height":["case",["has","height"],["to-number",["get","height"]],3.2]}},{id:"msft-buildings",type:"fill-extrusion",minzoom:10,maxzoom:18,source:"buildings","source-layer":"building",filter:["==","Microsoft ML Buildings",["get","@geometry_source"]],paint:{"fill-extrusion-color":"rgb(243,175,102)","fill-extrusion-opacity":1,"fill-extrusion-base":0,"fill-extrusion-height":["case",["has","height"],["to-number",["get","height"]],3.2]}},{id:"google-buildings",type:"fill-extrusion",minzoom:10,maxzoom:18,source:"buildings","source-layer":"building",filter:["==","Google Open Buildings",["get","@geometry_source"]],paint:{"fill-extrusion-color":"rgb(236,253,188)","fill-extrusion-opacity":1,"fill-extrusion-base":0,"fill-extrusion-height":["case",["has","height"],["to-number",["get","height"]],3.2]}},{id:"building-names",type:"symbol",source:"buildings","source-layer":"building",minzoom:14.5,layout:{"text-field":["get","@name"],"text-font":["Noto Sans Bold"],"text-size":10},paint:{"text-color":"black","text-halo-color":"#fff","text-halo-width":1,"text-halo-blur":.5}},{id:"admins",type:"symbol",source:"divisions","source-layer":"division",filter:["any",["==",["get","subtype"],"locality"],["==",["get","subtype"],"region"]],layout:{"text-field":["get","@name"],"text-font":["Noto Sans Bold"]},maxzoom:14}]}}),t.current.addControl(new(c().NavigationControl),"top-right"),t.current.addControl(new(c().FullscreenControl));return t.current.addControl(new class{constructor(e){switch(this._options={...e},this._container=document.createElement("div"),this._container.classList.add("maplibregl-ctrl"),this._container.classList.add("closed"),this._options.expandDirection||"right"){case"top":this._container.classList.add("reverse");case"down":this._container.classList.add("column");break;case"left":this._container.classList.add("reverse");case"right":this._container.classList.add("row")}}onAdd(e){return this._map=e,this._container}onRemove(){this._container.parentNode?.removeChild(this._container),delete this._map}},"bottom-left"),t.current.addControl(new(c().AttributionControl)({customAttribution:'<a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>, <a href="https://overturemaps.org" target="_blank">OvertureMaps Foundation</a>'}),"bottom-right"),()=>{c().removeProtocol("pmtiles")}}),[i,r,n]),(0,s.jsx)("div",{className:"map-wrap",children:(0,s.jsx)("div",{ref:e,className:"map"})})}const j={title:"Buildings",description:"Over 2.6B buildings globally"},f=void 0,p={},b=[{value:"Overview",id:"overview",level:2},{value:"Data access and retrieval",id:"data-access-and-retrieval",level:2},{value:"Data sources",id:"data-sources",level:2},{value:"Understanding the parquet files",id:"understanding-the-parquet-files",level:2},{value:"Schema reference",id:"schema-reference",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components},{Details:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(t.p,{children:["The Overture Maps buildings theme describes human-made structures with roofs or interior spaces that are permanently or semi-permanently in one place (source: ",(0,s.jsx)(t.a,{href:"https://wiki.openstreetmap.org/wiki/Key:building",children:"OSM building definition"}),"). The theme includes two feature types:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"building"})}),": The most basic form of a building feature. The geometry is expected to be the most outer footprint\u2014roofprint if traced from satellite/aerial imagery\u2014of a building. Buildings have a boolean attribute ",(0,s.jsx)(t.code,{children:"has_parts"})," that describe whether there are any associated building parts."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"building_part"})}),": A single part of a building. Building parts may share the same properties as buildings. A building part is associated with a parent building via a ",(0,s.jsx)(t.code,{children:"building_id"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"data-access-and-retrieval",children:"Data access and retrieval"}),"\n",(0,s.jsx)(t.p,{children:"Overture's building theme data is freely available on both Amazon S3 and Microsoft Azure Blob Storage at these locations:"}),"\n",(0,s.jsxs)(d.default,{children:[(0,s.jsx)(l.default,{value:"building",label:"building",default:!0,children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"provider"}),(0,s.jsx)(t.th,{children:"location"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Amazon S3"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(o.A,{query:"s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=buildings/type=building/*",language:"text"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Azure Blob Storage"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(o.A,{query:"https://overturemapswestus2.blob.core.windows.net/release/__OVERTURE_RELEASE/theme=buildings/type=building/*",language:"text"})})]})]})]})}),(0,s.jsx)(l.default,{value:"building_part",label:"building_part",children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"provider"}),(0,s.jsx)(t.th,{children:"location"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Amazon S3"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(o.A,{query:"s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=buildings/type=building_part/*",language:"text"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Azure Blob Storage"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(o.A,{query:"https://overturemapswestus2.blob.core.windows.net/release/__OVERTURE_RELEASE/theme=buildings/type=building_part/*",language:"text"})})]})]})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["Overture distributes its datasets as ",(0,s.jsx)(t.a,{href:"https://geoparquet.org/",children:"GeoParquet"}),", a column-oriented spatial data format that is a backwards-compatible extension of ",(0,s.jsx)(t.a,{href:"https://parquet.apache.org/",children:"Apache Parquet"}),'. Parquet (and GeoParquet) is optimized for "cloud-native" queries, which means you can use many developer-friendly tools to efficiently fetch column "chunks" of cloud-hosted data. We encourage users who are new to GeoParquet to consult ',(0,s.jsx)(t.a,{href:"https://guide.cloudnativegeo.org/geoparquet/",children:"this guide"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://docs.overturemaps.org/getting-data/",children:"The Getting Data section of this documentation"})," offers instructions for using several tools to access Overture data, including DuckDB and Overture's Python command-line tool. See examples below for addresses."]}),"\n",(0,s.jsx)(t.p,{children:"We recommend querying and downloading only the Overture data you need.\nIf you have a particular geographic area of interest, there are several options for using a simple bounding box to extract address data."}),"\n",(0,s.jsx)(t.h2,{id:"data-sources",children:"Data sources"}),"\n",(0,s.jsxs)("figure",{children:[(0,s.jsx)(g,{}),(0,s.jsx)("figcaption",{children:(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsxs)("span",{style:{backgroundColor:"rgb(36,39,47)",padding:2},children:[(0,s.jsxs)("span",{style:{color:"rgb(194,42,87)"},children:["\u25ac   ",(0,s.jsx)("span",{style:{color:"white"},children:"OpenStreetMap | "})]}),(0,s.jsxs)("span",{style:{color:"rgb(4,151,188)"},children:["\u25ac   ",(0,s.jsx)("span",{style:{color:"white"},children:"Esri Community Maps | "})]}),(0,s.jsxs)("span",{style:{color:"rgb(243,175,102)"},children:["\u25ac ",(0,s.jsx)("span",{style:{color:"white"},children:"Microsoft ML Buildings | "})]}),(0,s.jsxs)("span",{style:{color:"rgb(236,253,188)"},children:["\u25ac ",(0,s.jsx)("span",{style:{color:"white"},children:"Google Open Buildings "})]})]})})})]}),"\n",(0,s.jsx)(t.p,{children:'Above is a visualization of San Diego, USA where multiple datasets are conflated. Notice how Esri and OSM buildings appear in big blocks while the Google and Microsoft buildings appear to mix together. This is a product of our conflation process that prioritizes community contributed data first and then "fills in" the rest of the map with the best ML data available.'}),"\n",(0,s.jsx)(t.p,{children:"Currently, the Overture buildings dataset is a combination of the following open building datasets:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"source"}),(0,s.jsx)(t.th,{children:"type"}),(0,s.jsx)(t.th,{children:"conflation priority"}),(0,s.jsx)(t.th,{children:"count"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"//osm.org",children:"OpenStreetMap"})}),(0,s.jsx)(t.td,{children:"Community-contributed"}),(0,s.jsx)(t.td,{children:"1"}),(0,s.jsx)(t.td,{children:"~635 Million"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://communitymaps.arcgis.com/home",children:"Esri Community Maps"})}),(0,s.jsx)(t.td,{children:"Community-contributed"}),(0,s.jsx)(t.td,{children:"2"}),(0,s.jsx)(t.td,{children:"~11 Million"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.ign.es/",children:"Instituto Geogr\xe1fico Nacional (Espa\xf1a)"})}),(0,s.jsx)(t.td,{children:"National dataset"}),(0,s.jsx)(t.td,{children:"3"}),(0,s.jsx)(t.td,{children:"~11.7 Million"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://opendata.vancouver.ca/",children:"City of Vancouver, Canada"})}),(0,s.jsx)(t.td,{children:"Municipal dataset"}),(0,s.jsx)(t.td,{children:"4"}),(0,s.jsx)(t.td,{children:"~14 Thousand"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://sites.research.google/open-buildings/",children:"Google Open Buildings"})}),(0,s.jsx)(t.td,{children:"ML-derived roofprints (>90% precision)"}),(0,s.jsx)(t.td,{children:"5"}),(0,s.jsx)(t.td,{children:"~350 Million"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/microsoft/GlobalMLBuildingFootprints",children:"Microsoft"})}),(0,s.jsx)(t.td,{children:"ML-derived roofprints"}),(0,s.jsx)(t.td,{children:"6"}),(0,s.jsx)(t.td,{children:"~723 Million"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://sites.research.google/open-buildings/",children:"Google Open Buildings"})}),(0,s.jsx)(t.td,{children:"ML-derived roofprints (<90% precision)"}),(0,s.jsx)(t.td,{children:"7"}),(0,s.jsx)(t.td,{children:"~650 Million"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://zenodo.org/records/8174931",children:"Buildings in East Asian Countries"})}),(0,s.jsx)(t.td,{children:"ML-derived roofprints"}),(0,s.jsx)(t.td,{children:"8"}),(0,s.jsx)(t.td,{children:"~213 Million"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"understanding-the-parquet-files",children:"Understanding the parquet files"}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Schema for the GeoParquet files in the buildings theme"}),(0,s.jsx)("div",{children:(0,s.jsxs)(d.default,{children:[(0,s.jsx)(l.default,{value:"building",label:"building",default:!0,children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"column"}),(0,s.jsx)(t.th,{children:"type"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"id"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"A feature ID that may be associated with the Global Entity Reference System (GERS) if\u2014and-only-if the feature represents an entity that is part of GERS."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"geometry"}),(0,s.jsx)(t.td,{children:"binary"}),(0,s.jsx)(t.td,{children:"A building's geometry is defined as its footprint or roofprint (if traced from aerial/satellite imagery). It MUST be a Polygon or MultiPolygon as defined by the GeoJSON schema."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"bbox"}),(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:"Area defined by two longitudes and two latitudes: latitude is a decimal number between -90.0 and 90.0; longitude is a decimal number between -180.0 and 180.0."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"version"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"Version number of the feature, incremented in each Overture release where the geometry or attributes of this feature changed."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"sources"}),(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:"The array of source information for the properties of a given feature. Each source object lists the property in JSON Pointer notation and the dataset from which that specific value originated."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"subtype"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"A broad category of the building type and purpose."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"names"}),(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:'The name associated with the feature. The first entry in the array of names must have a "local" language.'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"class"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Further delineation of the building's built purpose."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"level"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"The building feature's Z-order, i.e., stacking order. A Z-order of 0 is ground level."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"has_parts"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Flag indicating whether the building has parts."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"is_underground"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Whether the entire building or part is completely below ground. This is useful for rendering which typically omits these buildings or styles them differently because they are not visible above ground. This is different than the level column which is used to indicate z-ordering of elements and negative values may be above ground."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"height"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Height of the building or part in meters. The height is the distance from the lowest point to the highest point."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"num_floors"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"Number of above-ground floors of the building or part."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"num_floors_underground"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"Number of below-ground floors of the building or part."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"min_height"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"The height of the bottom part of building in meters. Used if a building or part of building starts above the ground level."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"min_floor"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:'The "start" floor of a building or building part. Indicates that the building or part is "floating" and its bottom-most floor is above ground level, usually because it is part of a larger building in which some parts do reach ground level.'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"facade_color"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The color (name or color triplet) of the facade of a building or building part in hexadecimal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"facade_material"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The outer surface material of building facade."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_material"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The outermost material of the roof."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_shape"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The shape of the roof."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_direction"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Bearing of the roof ridge line."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_orientation"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:'Orientation of the roof shape relative to the footprint shape. Either "along" or "across."'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_color"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The color (name or color triplet) of the roof of a building or building part in hexadecimal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_height"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"The height of the building roof in meters. This represents the distance from the base of the roof to the highest point of the roof."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"filename"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Name of the file being queried."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"theme"}),(0,s.jsx)(t.td,{children:"varchar"}),(0,s.jsx)(t.td,{children:"Name of the Overture theme being queried."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"type"}),(0,s.jsx)(t.td,{children:"varchar"}),(0,s.jsx)(t.td,{children:"Name of the Overture feature type being queried."})]})]})]})}),(0,s.jsx)(l.default,{value:"building_part",label:"building_part",default:!0,children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"column"}),(0,s.jsx)(t.th,{children:"type"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"id"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"A feature ID that may be associated with the Global Entity Reference System (GERS) if\u2014and-only-if the feature represents an entity that is part of GERS."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"geometry"}),(0,s.jsx)(t.td,{children:"binary"}),(0,s.jsx)(t.td,{children:"The geometry of a single building part. It MUST be a Polygon or MultiPolygon as defined by the GeoJSON schema."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"bbox"}),(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:"Area defined by two longitudes and two latitudes: latitude is a decimal number between -90.0 and 90.0; longitude is a decimal number between -180.0 and 180.0."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"version"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"Version number of the feature, incremented in each Overture release where the geometry or attributes of this feature changed."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"sources"}),(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:"The array of source information for the properties of a given feature. Each source object lists the property in JSON Pointer notation and the dataset from which that specific value originated."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"names"}),(0,s.jsx)(t.td,{children:"struct"}),(0,s.jsx)(t.td,{children:'The name associated with the feature. The first entry in the array of names must have a "local" language.'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"level"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"The building feature's Z-order, i.e., stacking order. A Z-order of 0 is ground level."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"is_underground"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Whether the entire building or part is completely below ground. This is useful for rendering which typically omits these buildings or styles them differently because they are not visible above ground. This is different than the level column which is used to indicate z-ordering of elements and negative values may be above ground."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"height"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Height of the building or part in meters. The height is the distance from the lowest point to the highest point."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"num_floors"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"Number of above-ground floors of the building or part."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"num_floors_underground"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"Number of below-ground floors of the building or part."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"min_height"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"The height of the bottom part of building in meters. Used if a building or part of building starts above the ground level."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"min_floor"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:'The "start" floor of a building or building part. Indicates that the building or part is "floating" and its bottom-most floor is above ground level, usually because it is part of a larger building in which some parts do reach ground level.'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"facade_color"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The color (name or color triplet) of the facade of a building or building part in hexadecimal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"facade_material"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The outer surface material of building facade."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_material"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The outermost material of the roof."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_shape"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The shape of the roof."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_direction"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Bearing of the roof ridge line."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_orientation"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:'Orientation of the roof shape relative to the footprint shape. Either "along" or "across."'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_color"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The color (name or color triplet) of the roof of a building or building part in hexadecimal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"roof_height"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"The height of the building roof in meters. This represents the distance from the base of the roof to the highest point of the roof."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"building_id"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The building ID to which this part belongs."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"filename"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Name of the file being queried."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"theme"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Name of the Overture theme being queried."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"type"}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Name of the Overture feature type being queried."})]})]})]})})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"schema-reference",children:"Schema reference"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/schema/reference/buildings/building",children:"Explore the schema reference for the building feature type"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/schema/reference/buildings/building_part",children:"Explore the schema reference for the building part feature type"}),"."]}),"\n"]})]})}function y(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);