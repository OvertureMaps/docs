"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[4161],{85889:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>i});let n=JSON.parse('{"id":"examples/pandas","title":"Overture + Pandas","description":"extract and manipulate Overture data with DuckDB and Pandas","source":"@site/docs/examples/pandas.mdx","sourceDirName":"examples","slug":"/examples/pandas","permalink":"/examples/pandas","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1739989493000,"frontMatter":{"description":"extract and manipulate Overture data with DuckDB and Pandas","title":"Overture + Pandas"},"sidebar":"docs","previous":{"title":"Examples","permalink":"/examples/"},"next":{"title":"Overture + Lonboard","permalink":"/examples/lonboard"}}');var s=a(74848),r=a(28453);a(74235),a(15947);let o={description:"extract and manipulate Overture data with DuckDB and Pandas",title:"Overture + Pandas"},l=void 0,d={},i=[{value:"Example",id:"example",level:2},{value:"Next steps",id:"next-steps",level:2}];function c(e){let t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["In this example, we'll show you how to use ",(0,s.jsx)(t.a,{href:"https://duckdb.org/",children:"DuckDB"})," and ",(0,s.jsx)(t.a,{href:"http://pandas.pydata.org/",children:"Pandas"})," to extract and manipulate Overture data in a Jupyter notebook. We're using a Pandas DataFrame as an ideal structure for handling a small to medium amount of data and ",(0,s.jsx)(t.a,{href:"https://geopandas.org/en/stable/index.html",children:"GeoPandas"})," to extend Pandas for operations on geometric types. DuckDB allows us to fetch only the data we need from Overture's GeoParquet files stored on Microsoft Azure or AWS S3."]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Installation requirements"})})}),(0,s.jsxs)(t.p,{children:["To follow along with these examples, you should have ",(0,s.jsx)(t.a,{href:"https://jupyter.org/",children:"JupyterLab or Jupyter Notebook"})," running and the following dependencies installed:"]}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pandas.pydata.org/",children:"Pandas"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://geopandas.org/en/stable/index.html",children:"GeoPandas"})}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://duckdb.org/",children:"DuckDB"}),", ",(0,s.jsx)(t.a,{href:"https://duckdb.org/docs/extensions/spatial.html",children:"DuckDB spatial extension"}),", and ",(0,s.jsx)(t.a,{href:"https://duckdb.org/docs/extensions/aws.html",children:"DuckDB AWS extension"})," or ",(0,s.jsx)(t.a,{href:"https://duckdb.org/docs/extensions/azure.html",children:"DuckDB azure extension"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://jupysql.ploomber.io/en/latest/quick-start.html",children:"JupySQL"})," (optional)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/Mause/duckdb_engine",children:"duckdb-engine"})," (optional)"]}),"\n"]})]}),"\n",(0,s.jsxs)(t.p,{children:["A executable version of this notebook is available on ",(0,s.jsx)(t.a,{href:"https://notebooksharing.space/view/1d0d72d24ed82d22a8101377ca811ab7365b6a67dac98f3add034719c44b537f#displayOptions=",children:"Notebook Sharing Space"}),". More examples are available in ",(0,s.jsx)(t.a,{href:"https://docs.overturemaps.org/",children:"the notebooks directory"})," in our docs repository on GitHub."]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.p,{children:"Let's start by importing our toolkit."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# import our toolkit\nimport pandas as pd\nimport geopandas as gpd\nimport duckdb\nfrom shapely import wkt\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# no need to import duckdb_engine, JupySQL will auto-detect driver \n# load (or reload) jupysql Jupyter extension to create SQL cells\n%reload_ext sql\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The DuckDB documentation offers tips and examples for ",(0,s.jsx)(t.a,{href:"https://duckdb.org/docs/guides/python/jupyter.html",children:"running DuckDB queries in Jupyter notebooks"}),". In this example, we're using duckdb-engine and JupySQL. You can also connect to DuckDB natively."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# DuckDB in-memory database\n%sql duckdb://\n"})}),"\n",(0,s.jsx)(t.p,{children:"Next, we'll install and load DuckDB extensions to work with spatial data and connect to AWS. (Or you can use the Azure extension to connect to the Overture data stores on Azure.)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"%sql INSTALL spatial;\n%sql INSTALL httpfs;\n%sql LOAD spatial;\n%sql LOAD httpfs;\n%sql SET s3_region='us-west-2'\n"})}),"\n",(0,s.jsx)(t.p,{children:"We can set the configurations on JupySQL to directly output data to Pandas and to simplify the output that is printed to the notebook."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"%config SqlMagic.autopandas = True\n%config SqlMagic.feedback = False\n%config SqlMagic.displaycon = False\n"})}),"\n",(0,s.jsx)(t.p,{children:"Now we're going to extract data from Overture's base theme for an area along the Gulf Coast. The magic %%sql command turns the notebook cell into a SQL cell and allows us to dump our query results in a Pandas DataFrame. Note: this query takes about a minute run."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"%%sql gulf_water <<\nSELECT \n    id, \n    names.primary AS primary_name,\n    ST_AsText(geometry) as geometry\nFROM \n    read_parquet('s3://overturemaps-us-west-2/release/2024-09-18.0/theme=base/type=water/*', filename=true, hive_partitioning=1)\nWHERE \n    bbox.xmin >= -91.3994\n        and bbox.xmax <= -89.3864\n        and bbox.ymin >= 29.152\n        and bbox.ymax <= 30.5161\n"})}),"\n",(0,s.jsxs)(t.p,{children:["DuckDB 1.1.0 is able to interpret the geometry stored as a binary object in the GeoParquet file as a Shapely ",(0,s.jsx)(t.code,{children:"geometry"})," type."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# dataframe to geodataframe, set crs\ngulf_water_gdf = gpd.GeoDataFrame(\n    gulf_water,\n    geometry=gulf_water['geometry'].apply(wkt.loads),\n    crs=\"EPSG:4326\"\n)\n"})}),"\n",(0,s.jsx)(t.p,{children:"Let's work with just the water polygons and lines, not the points."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Apply a lambda to remove point geometries\ngulf_water_gdf = gulf_water_gdf[gulf_water_gdf['geometry'].apply(lambda x : x.geom_type!='Point' )]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Let's make a quick plot of the data. Voil\xe0!"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'gulf_water_gdf.plot(facecolor="#628290", edgecolor="#006064", lw=0.05)\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"gulf bay",src:a(86957).A+"",width:"1624",height:"1116"})}),"\n",(0,s.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Want to speed things up and work with larger extracts of Overture data? Check out our ",(0,s.jsx)(t.a,{href:"../lonboard",children:"Lonboard tutorial"}),"."]}),"\n"]})]})}function p(e={}){let{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},86957:(e,t,a)=>{a.d(t,{A:()=>n});let n=a.p+"assets/images/gulf-water-8d0bddd4738cbde0dcd61720df26728a.png"}}]);