"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[1526],{2594:(e,t,s)=>{s.d(t,{A:()=>a});var r=s(58069),n=s(40797),i=s(74848);function a(e){const{siteConfig:{customFields:t}}=(0,n.A)();var s=e.query.replaceAll("__OVERTURE_RELEASE",t.overtureRelease);s=(s=s.replaceAll("__ATHENA_OVERTURE_RELEASE","v"+t.overtureRelease.replaceAll(".","_").replaceAll("-","_"))).replaceAll("__PMTILES_OVERTURE_RELEASE",t.overtureRelease.split(".",1));var a=e.language||"sql";return(0,i.jsx)(r.default,{language:a,title:e.title,children:s})}},62648:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"gers/bridge-files","title":"Bridge Files","description":"With each data release, Overture generates bridge files that connect GERS IDs to the IDs from the source data. These files are a key component of GERS and offer two critical capabilities: reverse lookup of source features and insight into Overture\'s conflation process.","source":"@site/docs/gers/bridge-files.mdx","sourceDirName":"gers","slug":"/gers/bridge-files","permalink":"/gers/bridge-files","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1750896898000,"frontMatter":{"title":"Bridge Files"},"sidebar":"docs","previous":{"title":"What is GERS?","permalink":"/gers"},"next":{"title":"Data Changelog","permalink":"/gers/changelog"}}');var n=s(74848),i=s(28453),a=s(2594);const d={title:"Bridge Files"},l=void 0,o={},c=[{value:"Partitioning and schema",id:"partitioning-and-schema",level:2},{value:"Example: examining the source data for the <code>building</code> dataset",id:"example-examining-the-source-data-for-the-building-dataset",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["With each data release, Overture generates ",(0,n.jsx)(t.strong,{children:"bridge files"})," that connect GERS IDs to the IDs from the ",(0,n.jsx)(t.a,{href:"/attribution",children:"source data"}),". These files are a key component of GERS and offer two critical capabilities: reverse lookup of source features and insight into Overture's conflation process."]}),"\n",(0,n.jsx)(t.p,{children:"Here's how to get the bridge files:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Provider"}),(0,n.jsx)(t.th,{children:"Location"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Amazon S3"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"s3://overturemaps-us-west-2/bridgefiles/<RELEASE>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Microsoft Azure Blob Storage"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"https://overturemapswestus2.blob.core.windows.net/bridgefiles/<RELEASE>"})})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["The latest Overture data ",(0,n.jsx)(t.code,{children:"<RELEASE>"})," is: ",(0,n.jsx)(a.A,{query:"__OVERTURE_RELEASE/",language:"text"})]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"Currently, Overture only generates bridge files for these source datasets: Esri Community Maps, geoBoundaries, Instituto Geogr\xe1fico Nacional (Espa\xf1a), Meta Places, Microsoft Places, OpenStreetMap, PinMeTo."})}),"\n",(0,n.jsx)(t.h2,{id:"partitioning-and-schema",children:"Partitioning and schema"}),"\n",(0,n.jsxs)(t.p,{children:["Bridge files are released as Parquet files, partitioned by ",(0,n.jsx)(t.code,{children:"dataset"}),", ",(0,n.jsx)(t.code,{children:"theme"}),", and ",(0,n.jsx)(t.code,{children:"type"})," and structured in this way:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\\bridgefiles\n    \\<RELEASE>\n        \\dataset=OpenStreetMap\n            \\theme=divisions\n                \\type=division\n                \\type=division_area\n            \\theme=buildings\n                 \\type=building\n            \\theme=transportation\n                 \\type=segment\n        \\dataset=Esri Community Maps\n            \\theme=buildings\n                 \\type=building\n        \\dataset=PinMeTo\n            \\theme=places\n                 \\type=places\n        \\dataset=meta\n            \\theme=places\n                \\type=places\n        \\dataset=Microsoft\n            \\theme=places\n                \\type=places\n        \\dataset=Instituto Geogr\xe1fico Nacional (Espa\xf1a)\n            \\theme=buildings\n                \\type=building\n        \\dataset=geoBoundaries\n            \\theme=divisions\n                \\type=division\n                \\type=division_area\n\n"})}),"\n",(0,n.jsx)(t.p,{children:"The bridge file schema includes the following columns:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Column"}),(0,n.jsx)(t.th,{children:"Data type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"id"})}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"represents the GERS ID and is populated from the id column in the Overture data schema"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"record_id"})}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"represents the id of the feature as it is in the source data provider (e.g. n2757802019@9) and is populated by parsing the sources column in the Overture data schema"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"update_time"})}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"represents the time the feature or dataset was updated, depending on the data provider; also populated by parsing the sources column in the Overture schema"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dataset"})}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"represents the name of the dataset the feature has been provided in; also populated by parsing the sources column in the Overture data schema"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"theme"})}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"represents the theme the feature is a part of, provided by the creator of the bridge file itself"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"type"})}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"represents the type of the feature, either derived from the data or provided by the creator of the bridge file"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"between"})}),(0,n.jsx)(t.td,{children:"array"}),(0,n.jsx)(t.td,{children:"represents the portion of the normalized length of the GERS feature the dataset way takes, represented by a range between 0 and 1"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dataset_between"})}),(0,n.jsx)(t.td,{children:"array"}),(0,n.jsx)(t.td,{children:"represents the portion of the normalized length of the dataset way the GERS feature takes, represented by a range between 0 and 1"})]})]})]}),"\n",(0,n.jsxs)(t.h2,{id:"example-examining-the-source-data-for-the-building-dataset",children:["Example: examining the source data for the ",(0,n.jsx)(t.code,{children:"building"})," dataset"]}),"\n",(0,n.jsx)(t.p,{children:"In this example, we'll trace the buildings data in the latest release back to the underlying source datasets. We'll examine an area near the US-Mexico border outside San Diego. First, let's get the buildings in our area of interest:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE IF NOT EXISTS border_buildings AS\n(SELECT\n    *\nFROM read_parquet('s3://overturemaps-us-west-2/release/2025-05-21.0/theme=buildings/type=building/*')\nWHERE\nbbox.xmin > -117.048198 AND bbox.xmax < -117.044608\n    AND bbox.ymin > 32.535068 AND bbox.ymax < 32.600154);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["You'll notice the table has 4367 ",(0,n.jsx)(t.code,{children:"building"})," features. Now let's look at the ",(0,n.jsx)(t.code,{children:"building"})," count by data source:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"SELECT \n   sources[1].dataset AS source,\n   count(*)    \nFROM border_buildings\nGROUP BY source;\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         source         \u2502 count_star() \u2502\n\u2502        varchar         \u2502    int64     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Esri Community Maps    \u2502          412 \u2502\n\u2502 OpenStreetMap          \u2502         1539 \u2502\n\u2502 Google Open Buildings  \u2502         1751 \u2502\n\u2502 Microsoft ML Buildings \u2502          665 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Now we'll use the latest bridge file to find additional information about data in the Overture corpus that didn't make it into the release. We'll join the table we created from the release data with the bridge file data to create a new table that has detailed view of the source mappings. ",(0,n.jsx)(t.em,{children:"Remember: we only have bridge files for Esri Community Maps data and OpenStreetMap data."})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE IF NOT EXISTS border_buildings_corpus AS\n(SELECT\n  border_buildings.id AS gers_id,\n  dataset,\n  record_id AS dataset_record_id\nFROM\n  border_buildings\nJOIN \n  read_parquet('s3://overturemaps-us-west-2/bridgefiles/2025-05-21.0/dataset=*/theme=buildings/type=building/*') bridge\nON border_buildings.id = bridge.id\nORDER BY border_buildings.id, bridge.dataset);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["You might notice this new table created from our join has only 2,021 records compared to 4,367 ",(0,n.jsx)(t.code,{children:"building"})," records in our original query of the latest release data. This is because we have incomplete bridge file coverage for buildings; we don't generate bridge files for Microsoft ML Buildings and Google Open Buildings because those sources don't have meaningful IDs for reverse lookup. However the bridge files that do exist for buildings reveal important patterns:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Multiple sources per building: a single Overture building may be conflated from multiple source datasets"}),"\n",(0,n.jsx)(t.li,{children:"One-to-many mapping: each source contribution gets its own bridge file record"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Let's dig into this a bit more. We can identify the ",(0,n.jsx)(t.code,{children:"building"})," features in the release that have multiple source mappings."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"-- Identify buildings conflated from multiple sources\nSELECT gers_id, \n       COUNT(DISTINCT dataset) as source_count,\n       STRING_AGG(DISTINCT dataset, ', ') as datasets\nFROM border_buildings_corpus\nGROUP BY gers_id\nHAVING COUNT(DISTINCT dataset) > 1;\n"})}),"\n",(0,n.jsx)(t.p,{children:"There are 70 buildings with that are mapped to two data sources. Here's a snippet of the query result:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502             gers_id              \u2502 source_count \u2502              datasets              \u2502\n\u2502             varchar              \u2502    int64     \u2502              varchar               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 08b29a4c428ebfff02002b827866f466 \u2502            2 \u2502 OpenStreetMap, Esri Community Maps \u2502\n\u2502 08b29a4c428c3fff0200bb4d5defac52 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\u2502 08b29a4c428e5fff0200cddeda1c3c68 \u2502            2 \u2502 OpenStreetMap, Esri Community Maps \u2502\n\u2502 08b29a4c4280bfff0200729b26aa9ec7 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\u2502 08b29a4c428c9fff0200cc521ce08155 \u2502            2 \u2502 OpenStreetMap, Esri Community Maps \u2502\n\u2502 08b29a4c428cbfff0200df6833fcb919 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\u2502 08b29a4c428cbfff0200d5d23faeeec7 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\u2502 08b29a4c42809fff02000729055d0147 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\u2502 08b29a4c428ccfff02002cbabfaf31e0 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\u2502 08b29a4c4280bfff02003a1e8ccaeb68 \u2502            2 \u2502 Esri Community Maps, OpenStreetMap \u2502\n\n...\n"})}),"\n",(0,n.jsx)(t.p,{children:"Let's pull out one example:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"gers_id"}),(0,n.jsx)(t.th,{children:"dataset"}),(0,n.jsx)(t.th,{children:"dataset_record_id"}),(0,n.jsx)(t.th,{children:"update_time"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"08b29a4c428ebfff02002b827866f466"}),(0,n.jsx)(t.td,{children:"Esri Community Maps"}),(0,n.jsx)(t.td,{children:"esri_ChulaVistaCA13510"}),(0,n.jsx)(t.td,{children:"2024-10-15T00:00:00.000Z"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"08b29a4c428ebfff02002b827866f466"}),(0,n.jsx)(t.td,{children:"OpenStreetMap"}),(0,n.jsx)(t.td,{children:"w1182486582@1"}),(0,n.jsx)(t.td,{children:"2023-06-16T14:22:10.000Z"})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["This shows that building ",(0,n.jsx)(t.code,{children:"08b29a4c428ebfff02002b827866f466"})," was created by a conflation process that included data from OpenStreetMap (way 1182486582, version 1) and Esri Community Maps (esri_ChulaVistaCA13510). The conflation process ",(0,n.jsx)(t.em,{children:"may"})," have included other data sources that have not been mapped to GERS and released as bridge files."]}),"\n",(0,n.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Examine the source data for building ",(0,n.jsx)(t.code,{children:"08b29a4c428ebfff02002b827866f466"})," by looking up the OSM ID in ",(0,n.jsx)(t.a,{href:"https://www.openstreetmap.org/",children:"OpenStreetMap"})]}),"\n",(0,n.jsxs)(t.li,{children:["Explore the other components of GERS: registry, ",(0,n.jsx)(t.a,{href:"../changelog",children:"changelog"}),", and ",(0,n.jsx)(t.a,{href:"https://explore.overturemaps.org/#15/38.90678/-77.03649",children:"reference map"})]}),"\n",(0,n.jsxs)(t.li,{children:["Follow our ",(0,n.jsx)(t.a,{href:"../gers-tutorial",children:"GERS tutorial"})]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);