"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[5010],{15245:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=t(74848),r=t(28453);const a={title:"Overture + Fused"},o=void 0,i={id:"examples/fused",title:"Overture + Fused",description:"In these examples, we'll see ways to load and transform Overture data using Fused. The Fused Python library allows you to call predefined UDFs to load and process data into your Python environment.",source:"@site/docs/examples/fused.mdx",sourceDirName:"examples",slug:"/examples/fused",permalink:"/examples/fused",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1729196639e3,frontMatter:{title:"Overture + Fused"},sidebar:"docs",previous:{title:"Overture + Lonboard",permalink:"/examples/lonboard"},next:{title:"Overture + Kepler.gl",permalink:"/examples/kepler-gl"}},d={},l=[{value:"Examples",id:"examples",level:2},{value:"Join Overture Buildings and NSI",id:"join-overture-buildings-and-nsi",level:3},{value:"Create a Fused User Defined Function (UDF)",id:"create-a-fused-user-defined-function-udf",level:3},{value:"Next steps",id:"next-steps",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"In these examples, we'll see ways to load and transform Overture data using Fused. The Fused Python library allows you to call predefined UDFs to load and process data into your Python environment."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"join-overture-buildings-and-nsi",children:"Join Overture Buildings and NSI"}),"\n",(0,s.jsxs)(n.p,{children:["This example shows how to join the Overture Buildings dataset with the ",(0,s.jsx)(n.a,{href:"https://www.hec.usace.army.mil/confluence/nsi/technicalreferences/latest/technical-documentation",children:"National Structures Inventory (NSI)"})," dataset. The NSI API provides point data on buildings in the U.S. that are relevant to hazard analyses. Joining the NSI data with Overture Buildings can be used to enrich Overture Building features with additional metadata."]}),"\n",(0,s.jsxs)(n.p,{children:["We'll be loading Overture Buildings data using the Fused User Defined Function explained in ",(0,s.jsx)(n.a,{href:"/getting-data/fused/",children:"this"})," section of the docs."]}),"\n",(0,s.jsx)(n.p,{children:"First we import Fused."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import fused\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we can define a ",(0,s.jsx)(n.code,{children:"GeoDataFrame"})," with a bounding box of our area of interest. We'll use it to load data for the same area of each dataset."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import fused\nimport geopandas as gpd\nimport shapely\n\nbbox = gpd.GeoDataFrame(\n    geometry=[shapely.box(-73.9847, 40.7666, -73.9810, 40.7694)], \n    crs=4326\n)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We use ",(0,s.jsx)(n.code,{children:"fused.run"})," to run the predefined Overture UDF that loads Overture Buildings data for the given ",(0,s.jsx)(n.code,{children:"bbox"})," area. We may specify the Overture ",(0,s.jsx)(n.code,{children:"theme"})," with the ",(0,s.jsx)(n.code,{children:"overture_type"})," parameter, and a subset of columns to fetch with the ",(0,s.jsx)(n.code,{children:"use_columns"})," parameter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"gdf_overture = fused.run(\n    \"UDF_Overture_Maps_Example\", \n    bbox=bbox, \n    overture_type='building', \n    use_columns=['geometry', 'names', 'sources']\n)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To get the NSI data, we call the ",(0,s.jsx)(n.a,{href:"https://www.hec.usace.army.mil/confluence/nsi/technicalreferences/latest/api-reference-guide",children:"NSI API"}),", defining the area using a GeoJSON derived from the ",(0,s.jsx)(n.code,{children:"bbox"})," ",(0,s.jsx)(n.code,{children:"GeoDataFrame"}),". After receiving the response, we convert it into a ",(0,s.jsx)(n.code,{children:"GeoDataFrame"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\nimport json\n\n# Convert to GeoJSON\nbbox_geojson = json.loads(bbox.to_json())\n\n# Make a request to the NSI API\nresponse = requests.post(\n    url="https://nsi.sec.usace.army.mil/nsiapi/structures?fmt=fc",\n    json=bbox_geojson,\n)\n\n# Create a GeoDataFrame from the response\ngdf_nsi = gpd.GeoDataFrame.from_features(response.json()["features"])\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now we can join the Overture and NSI data using a spatial join."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"gdf_overture.sjoin(gdf_nsi, how='inner', predicate='intersects')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-a-fused-user-defined-function-udf",children:"Create a Fused User Defined Function (UDF)"}),"\n",(0,s.jsx)(n.p,{children:"We can encapsulate the above code into a UDF that can be referenced and reused in other workflows."}),"\n",(0,s.jsxs)(n.p,{children:["In this code, the ",(0,s.jsx)(n.code,{children:"@fused.udf"})," decorator indicates that the function is a UDF. The function defines the area of interest using the ",(0,s.jsx)(n.code,{children:"bbox"})," parameter. Note how the UDF imports are included in the function body."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import fused\n\n@fused.udf\ndef udf(bbox):\n    import json\n    import geopandas as gpd\n    import requests\n\n    # 1. Load Overture Buildings\n    gdf_overture = fused.run(\"UDF_Overture_Maps_Example\", bbox=bbox, overture_type='building')\n\n    # 2. Load NSI from API\n    bbox_geojson = json.loads(bbox.to_json())\n    response = requests.post(\n        url=\"https://nsi.sec.usace.army.mil/nsiapi/structures?fmt=fc\",\n        json=bbox_geojson,\n    )\n\n    # 3. Create NSI gdf\n    gdf_nsi = gpd.GeoDataFrame.from_features(response.json()[\"features\"])\n\n    # 4. Join Overture and NSI\n    return gdf_overture.sjoin(gdf_nsi, how='inner', predicate='intersects')\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we can run the UDF for an area specified by the bounding box."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"fused.run(udf, bbox=bbox) \n"})}),"\n",(0,s.jsxs)(n.p,{children:["By encapsulating the code into a UDF, a workflow or client application can dynamically pass different areas of interest to the ",(0,s.jsx)(n.code,{children:"bbox"})," parameter to run the UDF and return its output table. A simple way to try this is to run a UDF equivalent to the one we just created in the ",(0,s.jsx)(n.a,{href:"https://www.fused.io/workbench/catalog/Overture_Nsi-dd89972c-ce30-4544-ba0f-81fc09f5bbef",children:"Fused UDF Builder"})," which renders the UDF outputs on a map."]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Explore ",(0,s.jsx)(n.a,{href:"https://www.fused.io/workbench/catalog/Overture_Maps_Example-64071fb8-2c96-4015-adb9-596c3bac6787",children:"Fused Overture UDF"})," on the Fused UDF Builder."]}),"\n",(0,s.jsxs)(n.li,{children:["Check out an example of the ",(0,s.jsx)(n.a,{href:"https://www.fused.io/workbench/catalog/Overture_Nsi-dd89972c-ce30-4544-ba0f-81fc09f5bbef",children:"Overture + NSI UDF"})," on the Fused UDF Builder."]}),"\n",(0,s.jsxs)(n.li,{children:["Browse the ",(0,s.jsx)(n.a,{href:"https://www.fused.io/workbench/catalog",children:"Fused UDF Catalog"})," to find other examples of reusable UDFs."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);