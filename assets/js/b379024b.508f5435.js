"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[6234],{61443:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>b,frontMatter:()=>x,metadata:()=>j,toc:()=>f});var n=r(74848),s=r(28453),i=r(11470),a=r(19365),l=r(97577);const d="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nCOPY (\nSELECT\n    *\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=transportation/type=segment/*')\nWHERE\n    bbox.xmin > 12.46 AND bbox.xmax < 12.48 AND\n    bbox.ymin > 41.89 AND bbox.ymax < 41.91\n)\nTO 'rome_segments.parquet';",o="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nCOPY (\nSELECT\n    *\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=transportation/type=segment/*')\nWHERE\n    class = 'parking_aisle' AND\n    bbox.xmin > 13.0897 AND bbox.xmax < 13.6976 AND\n    bbox.ymin > 52.3100 AND bbox.ymax < 52.7086\n)\nTO 'berlin_parking_aisles.parquet';",c="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nCOPY (\nSELECT\n    *\nFROM read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=transportation/type=segment/*')\nWHERE\n    routes[1].network = 'US:I'\n    AND routes[1].ref = '5'\n)\nTO 'US_I_5.parquet';",h="SELECT id,\n    speed_limits,\n    ST_GeomFromBinary(geometry) AS geometry\nFROM __ATHENA_OVERTURE_RELEASE\nWHERE type = 'segment'\n\tAND ANY_MATCH(\n\t\tspeed_limits,\n\t\tspeed_limit -> speed_limit.max_speed.value = 27\n        AND speed_limit.max_speed.unit = 'mph'\n    )",u="WITH input AS (\n    SELECT id AS input_id,\n        connector_id\n    FROM __ATHENA_OVERTURE_RELEASE\n        CROSS JOIN UNNEST(connector_ids) AS t(connector_id)\n    WHERE type = 'segment'\n        AND id = '08628d5437ffffff0473ffc36df547db'\n)\nSELECT *,\n    ST_GEOMFROMBINARY(geometry) AS geometry\nFROM __ATHENA_OVERTURE_RELEASE,\n    input\nWHERE type = 'segment'\n    AND id != input_id\n    AND CONTAINS(connector_ids, input.connector_id)";r(3514);const x={title:"Transportation"},p=void 0,j={id:"guides/transportation",title:"Transportation",description:"Overview",source:"@site/docs/guides/transportation.mdx",sourceDirName:"guides",slug:"/guides/transportation",permalink:"/guides/transportation",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1723680488e3,frontMatter:{title:"Transportation"},sidebar:"docs",previous:{title:"Places",permalink:"/guides/places"},next:{title:"Global Entity Reference System (GERS)",permalink:"/gers"}},m={},f=[{value:"Overview",id:"overview",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Key concepts",id:"key-concepts",level:2},{value:"Dataset Description",id:"dataset-description",level:2},{value:"Subtypes",id:"subtypes",level:3},{value:"Data access and retrieval",id:"data-access-and-retrieval",level:2},{value:"Data usage guidelines",id:"data-usage-guidelines",level:2},{value:"Data manipulation and analysis",id:"data-manipulation-and-analysis",level:2},{value:"Querying by properties in DuckDB",id:"querying-by-properties-in-duckdb",level:3},{value:"Querying by properties in Athena",id:"querying-by-properties-in-athena",level:3},{value:"Tools and libraries",id:"tools-and-libraries",level:2},{value:"transportation-splitter",id:"transportation-splitter",level:3},{value:"Splitter Example",id:"splitter-example",level:4},{value:"More Information and Feedback",id:"more-information-and-feedback",level:4},{value:"Schema reference",id:"schema-reference",level:2}];function g(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Details:x}=t;return x||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n","\n",(0,n.jsxs)(t.p,{children:["Overture Maps transportation theme is the collection of features and attributes that describe the infrastructure and conventions of how people and objects travel around the world. Transportation data includes highways, footways, cycleways, railways, ferry routes, and public transportation. The dataset contains two features types: ",(0,n.jsx)(t.code,{children:"connector"})," and ",(0,n.jsx)(t.code,{children:"segment"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"feature type"}),(0,n.jsx)(t.th,{children:"Primary source"}),(0,n.jsx)(t.th,{children:"Feature count, July 2024 release"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"connector"}),(0,n.jsx)(t.td,{children:"OpenStreetMap"}),(0,n.jsx)(t.td,{children:"~355 million"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"segment"}),(0,n.jsx)(t.td,{children:"OpenStreetMap"}),(0,n.jsx)(t.td,{children:"~310 million"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,n.jsx)(t.p,{children:"You might use Overture Maps transportation data and schema for:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"mapping:"})," rendering a map of connected roads and paths."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"routing:"})," calculating optimal routes from place to place."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"navigation:"})," generating granular instructions on the maneuvers needed to\nfollow a route."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"analytics:"})," transportation-related analysis including traffic safety\nanalysis and disaster planning."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"geocoding:"})," getting the coordinates of street intersections (geocodes) or\nthe street intersection near specific coordinates (reverse geocodes)."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"key-concepts",children:"Key concepts"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Shape and connectivity."})," The transportation theme schema captures the shape\nand connectivity of the transportation network using ",(0,n.jsx)(t.code,{children:"segment"})," and ",(0,n.jsx)(t.code,{children:"connector"}),"\nfeatures. The schema design allows the segmentation process to promote shape\nstability and ultimately feature ID stability. Read more on the ",(0,n.jsx)(t.a,{href:"/schema/concepts/by-theme/transportation/shape-connectivity",children:"shape and connectivity"})," page."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Scoped and rule-based properties."})," The ",(0,n.jsx)(t.code,{children:"transportation"})," theme schema allows property values to be specified for granular scopes at the sub-feature level. For example:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["a speed limit on a road segment might be scoped to apply only to part of the\nroad geometry using ",(0,n.jsx)(t.em,{children:"geometric scoping"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["the directionality of a segment, controlling the direction or directions in\nwhich traffic can flow along the segment geometry, may be specified to change\nat different times of day using ",(0,n.jsx)(t.em,{children:"temporal scoping"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["the categories of people and vehicles who are allowed to travel on a segment\ncan be controlled using ",(0,n.jsx)(t.em,{children:"subjective scoping"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["a real-world attribute that varies under changing environmental conditions can\nbe modeled using ",(0,n.jsx)(t.em,{children:"environmental scoping"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Read more about these concepts on the ",(0,n.jsx)(t.a,{href:"/schema/concepts/scoping-rules",children:"scoped and rule-based properties"})," page."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Roads."})," The ",(0,n.jsx)(t.code,{children:"transportation"})," theme schema models any kind of road, street or\npath, including dedicated walking and cycling paths, as ",(0,n.jsx)(t.code,{children:"road"})," segments. Roads\nare currently the most developed part of the ",(0,n.jsx)(t.code,{children:"transportation"})," schema. Read more about roads on the ",(0,n.jsx)(t.a,{href:"/schema/concepts/by-theme/transportation/roads",children:"roads"})," page."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Travel modes."})," The ",(0,n.jsx)(t.code,{children:"transportation"})," theme supports a fuzzy concept called\ntravel mode which can be used as a way of controlling the scope of scoped\nand rule-based properties. Read more about the travel modes concept and how travel modes interact with other scoping properties on the ",(0,n.jsx)(t.a,{href:"/schema/concepts/by-theme/transportation/travel-modes",children:"travel modes"})," page."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"dataset-description",children:"Dataset Description"}),"\n",(0,n.jsx)(t.p,{children:"All Overture data, including transportation data, is distributed as GeoParquet, a column-based data structure. Below you'll find a table with column-by-column descriptions of the properties in the transportation feature type."}),"\n",(0,n.jsxs)(x,{children:[(0,n.jsx)("summary",{children:"Schema for GeoParquet files in the transportation theme"}),(0,n.jsx)("div",{children:(0,n.jsxs)(i.default,{children:[(0,n.jsx)(a.default,{value:"segment",label:"segment",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"column_name"}),(0,n.jsx)(t.th,{children:"column_type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"id"}),(0,n.jsx)(t.td,{children:"VARCHAR"}),(0,n.jsx)(t.td,{children:"A feature ID. This may be an ID associated with the Global Entity Reference System (GERS) if\u2014and-only-if the feature represents an entity that is part of GERS."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"geometry"}),(0,n.jsx)(t.td,{children:"BLOB"}),(0,n.jsx)(t.td,{children:"The line representation of the segment's location. Segment's geometry which MUST be a LineSting as defined by GeoJSON schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"bbox"}),(0,n.jsx)(t.td,{children:"STRUCT"}),(0,n.jsx)(t.td,{children:"Area defined by two longitudes and two latitudes: latitude is a decimal number between -90.0 and 90.0; longitude is a decimal number between -180.0 and 180.0."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"version"}),(0,n.jsx)(t.td,{children:"INTEGER"}),(0,n.jsx)(t.td,{children:"Version number of the feature, incremented in each Overture release where the geometry or attributes of this feature changed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"sources"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"The array of source information for the properties of a given feature, with each entry being a source object which lists the property in JSON Pointer notation and the dataset that specific value came from. All features must have a root level source which is the default source if a specific property's source is not specified."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"subtype"}),(0,n.jsx)(t.td,{children:"VARCHAR"}),(0,n.jsx)(t.td,{children:"The broad category of transportation segment."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"class"}),(0,n.jsx)(t.td,{children:"VARCHAR"}),(0,n.jsx)(t.td,{children:"Captures the kind of road and its position in the road network hierarchy."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"subclass"}),(0,n.jsx)(t.td,{children:"VARCHAR"}),(0,n.jsx)(t.td,{children:"Specifies the usage of a length of road."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"subclass_rules"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Defines the portion of a road that the subclass applies to."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"names"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Properties defining the names of a feature."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"connector_ids"}),(0,n.jsx)(t.td,{children:"VARCHAR[]"}),(0,n.jsx)(t.td,{children:"Deprecated: List of connector IDs identifying the connectors this segment is physically connected to. Each connector is a possible routing decision point, meaning it defines a place along the segment in which there is possibility to transition to other segments which share the same connector."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"connectors"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Array of connector IDs identifying the connectors this segment is physically connected to linearly referenced with their location. Each connector is a possible routing decision point, meaning it defines a place along the segment in which there is possibility to transition to other segments which share the same connector."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"routes"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Routes this segment belongs to."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"access_restrictions"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Rules governing access to this road segment or lane."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"level_rules"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Defines the Z-order, i.e. stacking order, of the road segment."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"prohibited_transitions"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Defines where traveling from the segment to another is disallowed for navigation. This covers things situations prohibited turns or a transition from road to bike lane disallowing cars."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road_surface"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Defines the surface material on a road such as paved, asphalt, or unpaved."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road_flags"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Additional properties relevant to roads such as is_bridge or is_under_construction."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"speed_limits"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Defines the speed limit of the road segment."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"width_rules"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Defines the width of the road segment for rendering."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"destinations"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"Describes the transitions from one segment to another on the way to a specified location. This data is primarily used for routing."})]})]})]})}),(0,n.jsx)(a.default,{value:"connector",label:"connector",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"column_name"}),(0,n.jsx)(t.th,{children:"column_type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"id"}),(0,n.jsx)(t.td,{children:"VARCHAR"}),(0,n.jsx)(t.td,{children:"A feature ID. This may be an ID associated with the Global Entity Reference System (GERS) if\u2014and-only-if the feature represents an entity that is part of GERS."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"geometry"}),(0,n.jsx)(t.td,{children:"BLOB"}),(0,n.jsx)(t.td,{children:"The line representation of the segment's location. Segment's geometry which MUST be a LineSting as defined by GeoJSON schema."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"bbox"}),(0,n.jsx)(t.td,{children:"STRUCT"}),(0,n.jsx)(t.td,{children:"Area defined by two longitudes and two latitudes: latitude is a decimal number between -90.0 and 90.0; longitude is a decimal number between -180.0 and 180.0."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"version"}),(0,n.jsx)(t.td,{children:"INTEGER"}),(0,n.jsx)(t.td,{children:"Version number of the feature, incremented in each Overture release where the geometry or attributes of this feature changed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"sources"}),(0,n.jsx)(t.td,{children:"STRUCT[]"}),(0,n.jsx)(t.td,{children:"The array of source information for the properties of a given feature, with each entry being a source object which lists the property in JSON Pointer notation and the dataset that specific value came from. All features must have a root level source which is the default source if a specific property's source is not specified."})]})]})]})})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"subtypes",children:"Subtypes"}),"\n",(0,n.jsxs)(t.p,{children:["Transportation segments are divided into three subtypes: ",(0,n.jsx)(t.strong,{children:"rail"}),", ",(0,n.jsx)(t.strong,{children:"water"}),", and ",(0,n.jsx)(t.strong,{children:"road"}),". The road subtype is then further divided into a variety of different classes based on usage captured in the table below."]}),"\n",(0,n.jsxs)(x,{children:[(0,n.jsx)("summary",{children:"Class and subclass feature counts"}),(0,n.jsx)("div",{children:(0,n.jsx)(i.default,{children:(0,n.jsx)(a.default,{value:"classes",label:"classes",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"subtype"}),(0,n.jsx)(t.th,{children:"class"}),(0,n.jsx)(t.th,{children:"subclass"}),(0,n.jsx)(t.th,{children:"Feature count, August 2024 release"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"rail"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"1,894,140"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"bridleway"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"94,649"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"cycleway"}),(0,n.jsx)(t.td,{children:"cycle_crossing"}),(0,n.jsx)(t.td,{children:"44,280"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"cycleway"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"1,174,065"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"footway"}),(0,n.jsx)(t.td,{children:"crosswalk"}),(0,n.jsx)(t.td,{children:"1,756,875"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"footway"}),(0,n.jsx)(t.td,{children:"sidewalk"}),(0,n.jsx)(t.td,{children:"2,810,219"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"footway"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"14,203,339"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"living_street"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"2,999,247"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"motorway"}),(0,n.jsx)(t.td,{children:"link"}),(0,n.jsx)(t.td,{children:"623,142"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"motorway"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"423,706"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"path"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"12,531,561"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"pedestrian"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"4,461,28"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"primary"}),(0,n.jsx)(t.td,{children:"link"}),(0,n.jsx)(t.td,{children:"466,752"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"primary"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"6,460,325"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"residential"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"123,137,670"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"secondary"}),(0,n.jsx)(t.td,{children:"link"}),(0,n.jsx)(t.td,{children:"364,836"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"secondary"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"10,362,384"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"service"}),(0,n.jsx)(t.td,{children:"alley"}),(0,n.jsx)(t.td,{children:"1,512,815"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"service"}),(0,n.jsx)(t.td,{children:"driveway"}),(0,n.jsx)(t.td,{children:"14,792,664"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"service"}),(0,n.jsx)(t.td,{children:"parking_aisle"}),(0,n.jsx)(t.td,{children:"5,877,422"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"service"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"31,361,555"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"steps"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"1,649,650"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"tertiary"}),(0,n.jsx)(t.td,{children:"link"}),(0,n.jsx)(t.td,{children:"277,297"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"tertiary"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"19,033,943"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"track"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"23,639,360"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"trunk"}),(0,n.jsx)(t.td,{children:"link"}),(0,n.jsx)(t.td,{children:"530,490"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"trunk"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"3,321,652"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"unclassified"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"28,555,304"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"road"}),(0,n.jsx)(t.td,{children:"unknown"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"398,522"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"water"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"27,198"})]})]})]})})})})]}),"\n",(0,n.jsx)(t.h2,{id:"data-access-and-retrieval",children:"Data access and retrieval"}),"\n",(0,n.jsx)(t.p,{children:"The latest transportation data can be obtained from AWS or Azure as GeoParquet files at the following locations."}),"\n",(0,n.jsxs)(i.default,{children:[(0,n.jsx)(a.default,{value:"segment_url",label:"Segment",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Provider"}),(0,n.jsx)(t.th,{children:"Location"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Amazon S3"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(l.A,{query:"s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=transportation/type=segment/",language:"text"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Azure Blob Storage"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(l.A,{query:"https://overturemapswestus2.blob.core.windows.net/release/__OVERTURE_RELEASE/theme=transportation/type=segment/",language:"text"})})]})]})]})}),(0,n.jsx)(a.default,{value:"connector_url",label:"Connector",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Provider"}),(0,n.jsx)(t.th,{children:"Location"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Amazon S3"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(l.A,{query:"s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=transportation/type=connector/",language:"text"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Azure Blob Storage"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(l.A,{query:"https://overturemapswestus2.blob.core.windows.net/release/__OVERTURE_RELEASE/theme=transportation/type=connector/",language:"text"})})]})]})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"data-usage-guidelines",children:"Data usage guidelines"}),"\n",(0,n.jsx)(t.p,{children:"We recommend downloading only the Overture data you need. If you have a particular geographic area of interest, there are several options for using a simple bounding box to extract places data and output a GeoJSON file."}),"\n",(0,n.jsxs)(i.default,{children:[(0,n.jsxs)(a.default,{value:"Overture Maps Explorer",label:"Overture Maps Explorer",default:!0,children:[(0,n.jsxs)(t.p,{children:["To quickly view and download modest amounts of data, you can use the ",(0,n.jsx)(t.a,{href:"https://explore.overturemaps.org/#15.07/41.89731/12.47626",children:"Overture Maps Explorer website"}),"."]}),(0,n.jsxs)(t.p,{children:["To download data: Pan to the area you are interested in, turn off the other layers, then click ",(0,n.jsx)(t.code,{children:"Download Visible"}),"."]}),(0,n.jsx)(t.p,{children:"This will download the area visible on your screen."})]}),(0,n.jsxs)(a.default,{value:"Python Command-line Tool",label:"Python Command-line Tool",default:!0,children:[(0,n.jsxs)(t.p,{children:["First, follow the ",(0,n.jsx)(t.a,{href:"/getting-data/overturemaps-py/",children:"setup guide for the Python Command-line Tool"}),"."]}),(0,n.jsxs)(t.p,{children:["Set type to either ",(0,n.jsx)(t.code,{children:"segment"})," or ",(0,n.jsx)(t.code,{children:"connector"})," and simply alter the ",(0,n.jsx)(t.code,{children:"bbox"})," value to download a particular area."]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"overturemaps download --bbox=12.46,41.89,12.48,41.91 -f geojson --type=segment -o rome_segments.geojson\n"})})]}),(0,n.jsxs)(a.default,{value:"DuckDB",label:"DuckDB",default:!0,children:[(0,n.jsxs)(t.p,{children:["First, follow the ",(0,n.jsx)(t.a,{href:"/getting-data/duckdb/",children:"setup guide for DuckDB"}),"."]}),(0,n.jsxs)(t.p,{children:["Set the parquet link to either the ",(0,n.jsx)(t.strong,{children:"connector"})," or ",(0,n.jsx)(t.strong,{children:"segment"})," url depending on your needs."]}),(0,n.jsxs)(t.p,{children:["Replace the ",(0,n.jsx)(t.code,{children:"bbox.xmin"})," and ",(0,n.jsx)(t.code,{children:"bbox.ymin"})," values with a new bounding box to run the query for a different area."]}),(0,n.jsx)(l.A,{query:d})]})]}),"\n",(0,n.jsx)(t.h2,{id:"data-manipulation-and-analysis",children:"Data manipulation and analysis"}),"\n",(0,n.jsx)(t.h3,{id:"querying-by-properties-in-duckdb",children:"Querying by properties in DuckDB"}),"\n",(0,n.jsx)(t.p,{children:"These examples use data properties to filter the data in useful ways using DuckDB."}),"\n",(0,n.jsxs)(i.default,{children:[(0,n.jsxs)(a.default,{value:"Query by class",label:"Query by class",default:!0,children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"class"})," column can be used to pull out subsets of the road data. Similarly, you could use subtype to select only water, rail, or road features. This example extracts only the ",(0,n.jsx)(t.strong,{children:"parking_aisle"})," features within the bounding box."]}),(0,n.jsx)(l.A,{query:o})]}),(0,n.jsxs)(a.default,{value:"Query by routes",label:"Query by routes",default:!0,children:[(0,n.jsxs)(t.p,{children:["You might be interested in a network of roads, such as a US Interstate. These can be extracted using the ",(0,n.jsx)(t.code,{children:"routes"})," column and either using the ",(0,n.jsx)(t.code,{children:"network"})," and ",(0,n.jsx)(t.code,{children:"ref"})," properties and/or the ",(0,n.jsx)(t.code,{children:"wikidata"})," column to identify the route."]}),(0,n.jsxs)(t.p,{children:["This example extracts all the roads that are part of US I-5. To get all US Interstates simply remove ",(0,n.jsx)(t.code,{children:"AND routes[1].ref = '5'"})," from the query."]}),(0,n.jsx)(l.A,{query:c})]})]}),"\n",(0,n.jsx)(t.h3,{id:"querying-by-properties-in-athena",children:"Querying by properties in Athena"}),"\n",(0,n.jsx)(t.p,{children:"Athena can allow for faster querying of the transportation layer than DuckDB given the size of the data. These examples are designed for Athena, but could be reworked for DuckDB with some tweaking."}),"\n",(0,n.jsxs)(i.default,{children:[(0,n.jsxs)(a.default,{value:"Query by speed limit",label:"Query by speed limit",default:!0,children:[(0,n.jsxs)(t.p,{children:["To properly return a linear referenced feature like a speed limit, we will need to query all the possible values of the feature as the queried value may only exist on one portion of the line. In this example, we're extracting roads with any speed limit ",(0,n.jsx)(t.code,{children:"max_speed"})," value of ",(0,n.jsx)(t.strong,{children:"27"})," and unit of ",(0,n.jsx)(t.strong,{children:"mph"})," using the any_match function."]}),(0,n.jsxs)(t.p,{children:["This same general query would also work for querying other similar columns such as ",(0,n.jsx)(t.code,{children:"prohibited_transitions"})," and ",(0,n.jsx)(t.code,{children:"access_restrictions"}),"."]}),(0,n.jsx)(l.A,{query:h})]}),(0,n.jsxs)(a.default,{value:"Select connecting segments",label:"Select connecting segments",default:!0,children:[(0,n.jsxs)(t.p,{children:["With the ",(0,n.jsx)(t.code,{children:"connecting_segments"})," column it is simple to query for all features that connect with a particular segment without the need for a spatial query."]}),(0,n.jsx)(t.p,{children:"This example selects all the segments that that connect to the example id."}),(0,n.jsx)(l.A,{query:u})]})]}),"\n",(0,n.jsx)(t.h2,{id:"tools-and-libraries",children:"Tools and libraries"}),"\n",(0,n.jsx)(t.h3,{id:"transportation-splitter",children:"transportation-splitter"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.img,{alt:"Overture Splitter",src:r(13567).A+""})})})}),(0,n.jsx)(t.tbody,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.em,{children:"Conceptual diagram of the splitter tool output. The numbers following 1234@ represent start_lr and end_lr values."})})})})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://github.com/OvertureMaps/transportation-splitter",children:"transportation-spitter tool"})," transforms Overture road data into simpler sub segments. It will optionally divide features at each connector point and at each change of a ",(0,n.jsx)(t.a,{href:"/schema/concepts/scoping-rules/",children:"scoped based property"}),", depending on configuration. Depending on your needs and map stack, the resulting dataset may be easier to manipulate than the original Overture data as each segment will only have connections at either end and have one set of properties for its entire length."]}),"\n",(0,n.jsxs)(t.p,{children:["Since a GERS ID will no longer be unique with this output, the resulting data will have two additional columns: ",(0,n.jsx)(t.code,{children:"start_lr"})," and ",(0,n.jsx)(t.code,{children:"end_lr"})," which are linear references describing which section of the orginal feature this new segment comes from."]}),"\n",(0,n.jsx)(t.h4,{id:"splitter-example",children:"Splitter Example"}),"\n",(0,n.jsx)(t.p,{children:"To help visualize this process better, here is a real world example of a residential street in OpenStreetMap, Overture, and after being run through the splitter tool."}),"\n",(0,n.jsxs)(i.default,{children:[(0,n.jsx)(a.default,{value:"OpenStreetMap",label:"OpenStreetMap",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.img,{alt:"OpenStreetMap Splitter Example",src:r(83671).A+"",width:"400",height:"648"})})})}),(0,n.jsx)(t.tbody,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"In OpenStreetMap this residential road is represented by two different features with the same tags with feature 1 having an additional restricted access tag."})})})]})}),(0,n.jsx)(a.default,{value:"Overture",label:"Overture",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.img,{alt:"Overture Splitter Example",src:r(54534).A+"",width:"400",height:"648"})})})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsx)(t.tr,{children:(0,n.jsxs)(t.td,{style:{textAlign:"center"},children:["In Overture the two segments have been combined into one feature and the restricted access tag has been stored as this linear reference in ",(0,n.jsx)(t.strong,{children:"access_restrictions"}),":"]})}),(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.code,{children:"[{'access_type': allowed, 'when': {'during': NULL, 'heading': NULL, 'using': NULL, 'recognized': [as_private], 'mode': NULL, 'vehicle': NULL}, 'between': [0.521962729, 1.0]}]"})})})]})]})}),(0,n.jsx)(a.default,{value:"Transportation Splitter",label:"Transportation Splitter",default:!0,children:(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.img,{alt:"Splitter Output Example",src:r(47797).A+"",width:"400",height:"648"})})})}),(0,n.jsx)(t.tbody,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"The splitter has sliced the Overture feature at each connector point for the driveways as well as at the point where the access restriction begins. This results in six unique features in the output all still sharing the same GERS ID."})})})]})})]}),"\n",(0,n.jsx)(t.h4,{id:"more-information-and-feedback",children:"More Information and Feedback"}),"\n",(0,n.jsxs)(t.p,{children:["The tool requires a Spark environment to run and has been tested using Azure Databricks and AWS Glue. For set up information the ",(0,n.jsx)(t.a,{href:"https://github.com/OvertureMaps/transportation-splitter",children:"transportation-spitter GitHub"})," will contain the most up to date information as the tool is in active development still."]}),"\n",(0,n.jsxs)(t.p,{children:["If you have feedback, questions, etc. on the tool you can create an ",(0,n.jsx)(t.a,{href:"https://github.com/OvertureMaps/transportation-splitter/issues",children:"issue"})," on the GitHub."]}),"\n",(0,n.jsx)(t.h2,{id:"schema-reference",children:"Schema reference"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/schema/reference/transportation/segment",children:"Explore the schema for the segment feature type"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/schema/reference/transportation/connector",children:"Explore the schema for the connector feature type"})}),"\n"]})]})}function b(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},3514:(e,t,r)=>{r.d(t,{A:()=>g});r(96540);var n=r(18215),s=r(84142),i=r(28774),a=r(53465),l=r(16654),d=r(21312),o=r(51107);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=r(74848);function u(e){let{href:t,children:r}=e;return(0,h.jsx)(i.A,{href:t,className:(0,n.A)("card padding--lg",c.cardContainer),children:r})}function x(e){let{href:t,icon:r,title:s,description:i}=e;return(0,h.jsxs)(u,{href:t,children:[(0,h.jsxs)(o.A,{as:"h2",className:(0,n.A)("text--truncate",c.cardTitle),title:s,children:[r," ",s]}),i&&(0,h.jsx)("p",{className:(0,n.A)("text--truncate",c.cardDescription),title:i,children:i})]})}function p(e){let{item:t}=e;const r=(0,s.Nr)(t),n=function(){const{selectMessage:e}=(0,a.W)();return t=>e(t,(0,d.translate)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return r?(0,h.jsx)(x,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??n(t.items.length)}):null}function j(e){let{item:t}=e;const r=(0,l.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,s.cC)(t.docId??void 0);return(0,h.jsx)(x,{href:t.href,icon:r,title:t.label,description:t.description??n?.description})}function m(e){let{item:t}=e;switch(t.type){case"link":return(0,h.jsx)(j,{item:t});case"category":return(0,h.jsx)(p,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const r=(0,s.$S)();return(0,h.jsx)(g,{items:r.items,className:t})}function g(e){const{items:t,className:r}=e;if(!t)return(0,h.jsx)(f,{...e});const i=(0,s.d1)(t);return(0,h.jsx)("section",{className:(0,n.A)("row",r),children:i.map(((e,t)=>(0,h.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,h.jsx)(m,{item:e})},t)))})}},19365:(e,t,r)=>{r.r(t),r.d(t,{default:()=>a});r(96540);var n=r(18215);const s={tabItem:"tabItem_Ymn6"};var i=r(74848);function a(e){let{children:t,hidden:r,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,a),hidden:r,children:t})}},11470:(e,t,r)=>{r.r(t),r.d(t,{default:()=>w});var n=r(96540),s=r(18215),i=r(23104),a=r(56347),l=r(205),d=r(57485),o=r(31682),c=r(89466);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}(r);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function x(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const s=(0,a.W6)(),i=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,d.aZ)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(s.location.search);t.set(i,e),s.replace({...s.location,search:t.toString()})}),[i,s])]}function j(e){const{defaultValue:t,queryString:r=!1,groupId:s}=e,i=u(e),[a,d]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[o,h]=p({queryString:r,groupId:s}),[j,m]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,i]=(0,c.Dv)(r);return[s,(0,n.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:s}),f=(()=>{const e=o??j;return x({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{f&&d(f)}),[f]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!x({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),m(e)}),[h,m,i]),tabValues:i}}var m=r(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(74848);function b(e){let{className:t,block:r,selectedValue:n,selectValue:a,tabValues:l}=e;const d=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),c=e=>{const t=e.currentTarget,r=d.indexOf(t),s=l[r].value;s!==n&&(o(t),a(s))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=d.indexOf(e.currentTarget)+1;t=d[r]??d[0];break}case"ArrowLeft":{const r=d.indexOf(e.currentTarget)-1;t=d[r]??d[d.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},t),children:l.map((e=>{let{value:t,label:r,attributes:i}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>d.push(e),onKeyDown:h,onClick:c,...i,className:(0,s.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function y(e){let{lazy:t,children:r,selectedValue:s}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function v(e){const t=j(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,g.jsx)(b,{...t,...e}),(0,g.jsx)(y,{...t,...e})]})}function w(e){const t=(0,m.A)();return(0,g.jsx)(v,{...e,children:h(e.children)},String(t))}},53465:(e,t,r)=>{r.d(t,{W:()=>o});var n=r(96540),s=r(44586);const i=["zero","one","two","few","many","other"];function a(e){return i.filter((t=>e.includes(t)))}const l={locale:"en",pluralForms:a(["one","other"]),select:e=>1===e?"one":"other"};function d(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,n.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:a(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),l}}),[e])}function o(){const e=d();return{selectMessage:(t,r)=>function(e,t,r){const n=e.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${e}`);const s=r.select(t),i=r.pluralForms.indexOf(s);return n[Math.min(i,n.length-1)]}(r,t,e)}}},97577:(e,t,r)=>{r.d(t,{A:()=>a});var n=r(21432),s=r(44586),i=r(74848);function a(e){const{siteConfig:{customFields:t}}=(0,s.A)();var r=e.query.replace("__OVERTURE_RELEASE",t.overtureRelease);r=(r=r.replace("__ATHENA_OVERTURE_RELEASE","v"+t.overtureRelease.replaceAll(".","_").replaceAll("-","_"))).replace("__PMTILES_OVERTURE_RELEASE",t.overtureRelease.split(".",1));var a=e.language||"sql";return(0,i.jsx)(n.default,{language:a,title:e.title,children:r})}},13567:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/splitter_concept-196b066564f30ea229fd3a2355221e8f.svg"},83671:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/splitter_osm-ec5ca1f146732041f17c709575789187.png"},47797:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/splitter_output-93956dae4221c80c88df5c0d43819acd.png"},54534:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/splitter_overture-d8d4cefd5b91b54e0e43861b1c851baf.png"}}]);