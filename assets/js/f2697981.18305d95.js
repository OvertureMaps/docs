"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[4161],{75085:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>i});var a=n(74848),s=n(28453);n(11470),n(19365);const r={description:"extract and manipulate Overture data with DuckDB and Pandas",title:"Overture + Pandas"},o=void 0,l={id:"examples/pandas",title:"Overture + Pandas",description:"extract and manipulate Overture data with DuckDB and Pandas",source:"@site/docs/examples/pandas.mdx",sourceDirName:"examples",slug:"/examples/pandas",permalink:"/examples/pandas",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1726782636e3,frontMatter:{description:"extract and manipulate Overture data with DuckDB and Pandas",title:"Overture + Pandas"},sidebar:"docs",previous:{title:"Examples",permalink:"/examples/"},next:{title:"Overture + Lonboard",permalink:"/examples/lonboard"}},d={},i=[{value:"Example",id:"example",level:2},{value:"Next steps",id:"next-steps",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["In this example, we'll show you how to use ",(0,a.jsx)(t.a,{href:"https://duckdb.org/",children:"DuckDB"})," and ",(0,a.jsx)(t.a,{href:"http://pandas.pydata.org/",children:"Pandas"}),' to extract and manipulate Overture data in a Jupyter notebook. We\'re using a Pandas DataFrame as an ideal structure for handling a "medium" amount of data and ',(0,a.jsx)(t.a,{href:"https://geopandas.org/en/stable/index.html",children:"GeoPandas"})," to extend Pandas for operations on geometric types. We also need the ",(0,a.jsx)(t.a,{href:"https://shapely.readthedocs.io/en/stable/index.html",children:"Shapely"})," to support the processing of our feature geometries. DuckDB allows us to fetch only the data we need from Overture's GeoParquet files stored on Microsoft Azure or AWS S3."]}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Installation requirements"})})}),(0,a.jsxs)(t.p,{children:["To follow along with these examples, you should have ",(0,a.jsx)(t.a,{href:"https://jupyter.org/",children:"JupyterLab or Jupyter Notebook"})," running and the following dependencies installed:"]}),(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://pandas.pydata.org/",children:"Pandas"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://geopandas.org/en/stable/index.html",children:"GeoPandas"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://shapely.readthedocs.io/en/stable/index.html",children:"Shapely"})}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://duckdb.org/",children:"DuckDB"}),", ",(0,a.jsx)(t.a,{href:"https://duckdb.org/docs/extensions/spatial.html",children:"DuckDB spatial extension"}),", and ",(0,a.jsx)(t.a,{href:"https://duckdb.org/docs/extensions/aws.html",children:"DuckDB AWS extension"})," or ",(0,a.jsx)(t.a,{href:"https://duckdb.org/docs/extensions/azure.html",children:"DuckDB azure extension"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://jupysql.ploomber.io/en/latest/quick-start.html",children:"JupySQL"})," (optional)"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://github.com/Mause/duckdb_engine",children:"duckdb-engine"})," (optional)"]}),"\n"]})]}),"\n",(0,a.jsxs)(t.p,{children:["A executable version of this notebook is available on ",(0,a.jsx)(t.a,{href:"https://notebooksharing.space/view/1d0d72d24ed82d22a8101377ca811ab7365b6a67dac98f3add034719c44b537f#displayOptions=",children:"Notebook Sharing Space"}),". More examples are available in ",(0,a.jsx)(t.a,{href:"https://docs.overturemaps.org/",children:"the notebooks directory"})," in our docs repository on GitHub."]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.p,{children:"Let's start by importing our toolkit."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# import our toolkit\nimport pandas as pd\nimport geopandas as gpd\nfrom shapely import wkt\nimport duckdb\n"})}),"\n",(0,a.jsx)(t.p,{children:"Next, we'll install and load DuckDB extensions to work with spatial data and connect to AWS. (Or you can use the Azure extension to connect to the Overture data stores on Azure.)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"%sql INSTALL spatial;\n%sql INSTALL httpfs;\n%sql LOAD spatial;\n%sql LOAD httpfs;\n%sql SET s3_region='us-west-2'\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The DuckDB documentation offers tips and examples for ",(0,a.jsx)(t.a,{href:"https://duckdb.org/docs/guides/python/jupyter.html",children:"running DuckDB queries in Jupyter notebooks"}),". In this example, we're using duckdb-engine and JupySQL. You can also connect to DuckDB natively."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# no need to import duckdb_engine, JupySQL will auto-detect driver \n# load (or reload) jupysql Jupyter extension to create SQL cells\n%reload_ext sql\n"})}),"\n",(0,a.jsx)(t.p,{children:"We can set the configurations on JupySQL to directly output data to Pandas and to simplify the output that is printed to the notebook."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"%config SqlMagic.autopandas = True\n%config SqlMagic.feedback = False\n%config SqlMagic.displaycon = False\n"})}),"\n",(0,a.jsx)(t.p,{children:"Connect JupySQL to DuckDB using a SQLAlchemy-style connection string."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# DuckDB in-memory database\n%sql duckdb://\n"})}),"\n",(0,a.jsx)(t.p,{children:"Now we're going to extract data from Overture's base theme for an area along the Gulf Coast. The magic %%sql command turns the notebook cell into a SQL cell and allows us to dump our query results in a Pandas DataFrame. Note: this query takes about a minute run."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"%%sql gulf_water <<\nSELECT \n    id, \n    names.primary AS primary_name,\n    ST_AsText(ST_GeomFromWKB(geometry)) as geometry \nFROM \n    read_parquet('s3://overturemaps-us-west-2/release/2024-07-22.0/theme=base/type=water/*', filename=true, hive_partitioning=1)\nWHERE \n    bbox.xmin >= -91.3994\n        and bbox.xmax <= -89.3864\n        and bbox.ymin >= 29.152\n        and bbox.ymax <= 30.5161\n"})}),"\n",(0,a.jsx)(t.p,{children:"Before we move on, let's deal with the geometry we pulled out of Overture's GeoParquet file. Geometry columns in GeoParquet are stored in binary format. In the above query, we transformed that geometry into text, and now we need to turn it into a Shapely geometry to get it into our GeoDataFrame. Here's how we do that."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"gulf_water['geometry'] = gulf_water['geometry'].apply(wkt.loads)\n\n# dataframe to geodataframe, set crs\ngulf_water_gdf = gpd.GeoDataFrame(\n    gulf_water\n    , geometry='geometry', crs=\"EPSG:4326\"\n)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Let's work with just the water polygons and lines, not the points."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# Apply a lambda to remove point geometries\ngulf_water_gdf = gulf_water_gdf[gulf_water_gdf['geometry'].apply(lambda x : x.geom_type!='Point' )]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Let's make a quick plot of the data. Voil\xe0!"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'gulf_water_gdf.plot(facecolor="#628290", edgecolor="#006064", lw=0.05)\n'})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"gulf bay",src:n(86957).A+"",width:"1624",height:"1116"})}),"\n",(0,a.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Want to speed things up and work with larger extracts of Overture data? Check out our ",(0,a.jsx)(t.a,{href:"../lonboard",children:"Lonboard tutorial"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},86957:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/gulf-water-8d0bddd4738cbde0dcd61720df26728a.png"}}]);