"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[8868],{21661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=n(74848),a=n(28453),s=n(11470),o=n(19365);const i={title:"What to expect in Overture\u2019s August release"},l=void 0,c={permalink:"/blog/2024/08/15/preview-august-release",source:"@site/blog/2024-08-15-preview-august-release.mdx",title:"What to expect in Overture\u2019s August release",description:"Last month we released v1.0.0 of the Overture schema and \u201cgeneral availability\u201d versions of four themes:",date:"2024-08-15T00:00:00.000Z",tags:[],readingTime:4.32,hasTruncateMarker:!1,authors:[],frontMatter:{title:"What to expect in Overture\u2019s August release"},unlisted:!1,nextItem:{title:"Exploring Overture data, no SQL required",permalink:"/blog/2024/07/24/explore-site"}},u={authorsImageUrls:[]},d=[{value:"Transportation schema changes",id:"transportation-schema-changes",level:2},{value:"Subclasses",id:"subclasses",level:3},{value:"Connectors",id:"connectors",level:3},{value:"Destinations",id:"destinations",level:3},{value:"Transportation splitter tool",id:"transportation-splitter-tool",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Last month we released ",(0,r.jsx)(t.a,{href:"https://overturemaps.org/overture-maps-foundation-releases-general-availability-of-its-open-maps-datasets/",children:"v1.0.0 of the Overture schema and \u201cgeneral availability\u201d versions of four themes"}),":\nbase, buildings, divisions, and places. Our ",(0,r.jsx)(t.a,{href:"https://docs.overturemaps.org/guides/addresses/",children:"addresses theme"})," launched in alpha with 200 million addresses\nfor 14 countries; we anticipate adding more address data each month, country by country, starting with\nSwitzerland in the August release."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"https://docs.overturemaps.org/guides/transportation/",children:"transportation theme"})," remains in beta and we expect to make significant changes over the next couple\nmonths. In this post, we'll give you a preview of three key improvements to the transportation schema in the August\nrelease, ",(0,r.jsx)(t.strong,{children:"which will be available next week"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"transportation-schema-changes",children:"Transportation schema changes"}),"\n",(0,r.jsx)(t.p,{children:"The schema changes we plan to implement over the next few releases will better support routing and map\ndisplay use cases, and make it easier for our users to integrate Overture transportation data into their\npipelines and products. These improvements are necessary if we are to achieve our goal of a GA release in October.\nHere are the steps we're taking in the August release to move us toward that goal."}),"\n",(0,r.jsx)(t.h3,{id:"subclasses",children:"Subclasses"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsx)(t.tr,{children:(0,r.jsx)(t.th,{style:{textAlign:"center"},children:(0,r.jsx)(t.img,{alt:"Diagram of class and subclass structures",src:n(3509).A+"",width:"2503",height:"1596"})})})}),(0,r.jsx)(t.tbody,{children:(0,r.jsx)(t.tr,{children:(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.em,{children:"A diagram of the new class and subclass structures"})})})})]}),"\n",(0,r.jsxs)(t.p,{children:["We added a new ",(0,r.jsx)(t.code,{children:"subclass"})," property that refines the descriptions of segments by:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"clearly specifying the usage of a length of road, and using linear referencing instead of further segmentation to pinpoint a change in how the road is used"}),"\n",(0,r.jsx)(t.li,{children:"properly classifying detailed information from OpenStreetMap"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Subclasses require non-overlapping geometries, which will make it easier for routing engines to consume our\nroad data and generate turn-by-turn directions. The new class and subclass structures allow us to capture more\ninformation about roads from our data sources. For example, we\u2019ve been able\nto move more than 30 million \u201cunknown\u201d road segments from OSM into the new subclasses, laying the groundwork\nfor richer and more detailed map displays with Overture data."}),"\n",(0,r.jsx)(t.p,{children:"Here's how class, subclasses, and flags are modeled in the Overture schema:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"class: footway\nroad:\n  subclasses:\n   - value: sidewalk\n     between: [0, 0.6]\n   - value: crosswalk\n     between: [0.6, 1.0]\n flag:\n   - value: is_bridge\n     between: [0.2,0.3]\n   - value: is_under_construction\n     between: [0.3,0.5]\n\nclass: service\nroad:\n  subclasses:\n    - value: driveway\n      between: [0, 0.5]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"connectors",children:"Connectors"}),"\n",(0,r.jsxs)(t.p,{children:["To better support routing use cases, we added to the segment feature type a new property called\n",(0,r.jsx)(t.code,{children:"connectors"}),": an array of IDs with pre-computed linear reference values that explicitly link segments and\n",(0,r.jsx)(t.a,{href:"https://docs.overturemaps.org/schema/reference/transportation/connector/",children:"connector features"})," via coordinates. The ",(0,r.jsx)(t.code,{children:"connectors"})," property contains a list of connector features to which a segment feature is physically connected and the relative location of those connector features along the segment. Each connector is a possible routing decision point, meaning it defines a place along the segment in which there is possibility to transition to other segments that share the same connector."]}),"\n",(0,r.jsxs)(t.p,{children:["This new property \u2014 a replacement for the existing ",(0,r.jsx)(t.code,{children:"connector_ids"}),"\nproperty \u2014 will reduce complexity and improve accuracy as we calculate the intersections between segment and connector features. We plan to deprecate the ",(0,r.jsx)(t.code,{children:"connector_ids"})," property in the August release and remove it from the schema in the October release."]}),"\n",(0,r.jsx)(t.p,{children:"Here are examples from the Overture schema comparing the new and deprecated features:"}),"\n",(0,r.jsxs)(s.default,{children:[(0,r.jsx)(o.default,{value:"connectors",label:"new connectors property",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"id: overture:transportation:segment:123\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates: [[0, 0], [0.03, 0], [0.10, 0]]\nproperties:\n  theme: transportation\n  type: segment\n  version: 1\n  subtype: road\n  class: secondary\n  connectors:\n    - connector_id: fooConnector\n      at: 0\n    - connector_id: barConnector\n      at: 0.3\n    - connector_id: bazConnector\n      at: 1\n  road_surface:\n    - value: paved\n"})})}),(0,r.jsx)(o.default,{value:"connector_ids",label:"deprecated connector_ids property",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"id: overture:transportation:segment:123\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates: [[0, 0], [0.03, 0], [0.10, 0]]\nproperties:\n  theme: transportation\n  type: segment\n  version: 1\n  subtype: road\n  class: secondary\n  connector_ids: [fooConnector, barConnector, bazConnector]\n  road_surface:\n    - value: paved\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"destinations",children:"Destinations"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsx)(t.tr,{children:(0,r.jsx)(t.th,{style:{textAlign:"center"},children:(0,r.jsx)(t.img,{alt:"Highway signs",src:n(51020).A+"",width:"569",height:"291"})})})}),(0,r.jsx)(t.tbody,{children:(0,r.jsx)(t.tr,{children:(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.em,{children:"Highway signs help us get from point A to Green Bay"})})})})]}),"\n",(0,r.jsxs)(t.p,{children:["Also in support of routing use cases, we added a ",(0,r.jsx)(t.code,{children:"destinations"})," property to the segment feature type.\nThis property describes the transitions from one segment to another on the way to a specified location.\nIn turn-by-turn routing applications, this is what is known as \u201cfollow signs for\u201d \u2014 the human-readable\ndirections and signposts along a road, highway, or interstate that get us from point A to point Z, by way\nof any number of paths in between. We designed ",(0,r.jsx)(t.code,{children:"destinations"})," with a flexible schema that will allow us to\ncapture and model navigation data from many different sources."]}),"\n",(0,r.jsxs)(t.p,{children:["Here's an example of how highway sign information in the picture above is modeled in the ",(0,r.jsx)(t.code,{children:"destinations"})," schema:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"destinations:\n    - when:\n      heading: forward\n      from_connector_id: 08f274370d59a8840436ff3bad31c60e\n      to_connector_id: 08f274370d59a8840436ff3bad31c60e\n      to_segment_id: 08a274370d59ffff043fff3b802d7aa5\n      final_heading: forward\n      labels:\n       - value: Green Bay\n        type: unknown\n       - value: I 43 North\n        type: route_ref\n      symbols:\n       - NULL\n"})}),"\n",(0,r.jsx)(t.h2,{id:"transportation-splitter-tool",children:"Transportation splitter tool"}),"\n",(0,r.jsxs)(t.p,{children:["Recently we made our ",(0,r.jsx)(t.a,{href:"https://github.com/OvertureMaps/transportation-splitter",children:"transportation splitter tool"}),"\navailable in a public GitHub repository. The tool is an experimental PySpark script and Jupyter notebook that offers\nmultiple ways to split Overture\u2019s transportation features into smaller and simpler segments. Our new transportation guide includes ",(0,r.jsx)(t.a,{href:"https://docs.overturemaps.org/guides/transportation/#transportation-splitter",children:"examples of how to use the tool"}),". Please\ntake it for a test drive and ",(0,r.jsx)(t.a,{href:"https://github.com/OvertureMaps/transportation-splitter/issues",children:"let us know"})," what you think!"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},19365:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});n(96540);var r=n(18215);const a={tabItem:"tabItem_Ymn6"};var s=n(74848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,o),hidden:n,children:t})}},11470:(e,t,n)=>{n.r(t),n.d(t,{default:()=>j});var r=n(96540),a=n(18215),s=n(23104),o=n(56347),i=n(205),l=n(57485),c=n(31682),u=n(89466);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=h(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[c,d]=m({queryString:n,groupId:a}),[f,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),b=(()=>{const e=c??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{b&&l(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(74848);function x(e){let{className:t,block:n,selectedValue:r,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),a=i[n].value;a!==r&&(c(t),o(a))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function w(e){const t=f(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,v.jsx)(x,{...t,...e}),(0,v.jsx)(y,{...t,...e})]})}function j(e){const t=(0,g.A)();return(0,v.jsx)(w,{...e,children:d(e.children)},String(t))}},3509:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/class-subclass-diagram-9be4389de432aaba7498d120b343229c.png"},51020:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/highway-signs-b704883ebe9d2c52dbd31f65735a8cb4.png"}}]);