"use strict";(self.webpackChunkoverture_how_to=self.webpackChunkoverture_how_to||[]).push([[569],{2953:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var s=t(5893),r=t(1151);const a={title:"Cloud Services"},i=void 0,o={id:"accessing-the-data/cloud-services",title:"Cloud Services",description:"Amazon Athena",source:"@site/docs/accessing-the-data/cloud-services.mdx",sourceDirName:"accessing-the-data",slug:"/accessing-the-data/cloud-services",permalink:"/how-to/accessing-the-data/cloud-services",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Cloud Services"},sidebar:"docs",previous:{title:"Introduction",permalink:"/how-to/"},next:{title:"Locally (DuckDB)",permalink:"/how-to/accessing-the-data/locally"}},l={},c=[{value:"Amazon Athena",id:"amazon-athena",level:2},{value:"Microsft Synapse",id:"microsft-synapse",level:2}];function d(n){const e={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...n.components},{Details:t}=e;return t||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"amazon-athena",children:"Amazon Athena"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"You will need an AWS account."}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["Ensure that you are operating in the ",(0,s.jsx)(e.code,{children:"us-west-2"})," region."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"Run the following command in the Athena Query Console:"}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsxs)("summary",{children:["Click to view complete ",(0,s.jsx)(e.code,{children:"CREATE"})," command"]}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE EXTERNAL TABLE `overture`(\n    `categories` struct<main:string,alternate:array<string>>,\n    `level` int,\n    `socials` array<string>,\n    `subtype` string,\n    `numfloors` int,\n    `entityid` string,\n    `class` string,\n    `sourcetags` map<string,string>,\n    `localitytype` string,\n    `emails` array<string>,\n    `drivingside` string,\n    `adminlevel` int,\n    `road` string,\n    `isocountrycodealpha2` string,\n    `isosubcountrycode` string,\n    `updatetime` string,\n    `wikidata` string,\n    `confidence` double,\n    `defaultlanguage` string,\n    `brand` struct<names:struct<common:array<struct<value:string,language:string>>,official:array<struct<value:string,language:string>>,alternate:array<struct<value:string,language:string>>,short:array<struct<value:string,language:string>>>,wikidata:string>,\n    `addresses` array<struct<freeform:string,locality:string,postCode:string,region:string,country:string>>,\n    `names` struct<common:array<struct<value:string,language:string>>,official:array<struct<value:string,language:string>>,alternate:array<struct<value:string,language:string>>,short:array<struct<value:string,language:string>>>,\n    `isintermittent` boolean,\n    `connectors` array<string>,\n    `surface` string,\n    `version` int,\n    `phones` array<string>,\n    `id` string,\n    `geometry` binary,\n    `context` string,\n    `height` double,\n    `maritime` boolean,\n    `sources` array<struct<property:string,dataset:string,recordId:string,confidence:double>>,\n    `websites` array<string>,\n    `issalt` boolean,\n    `bbox` struct<minx:double,maxx:double,miny:double,maxy:double>)\nPARTITIONED BY (\n    `theme` string,\n    `type` string)\nSTORED AS PARQUET\nLOCATION\n    's3://overturemaps-us-west-2/release/2023-10-19-alpha.0'\n"})})]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["Load the partitions by running ",(0,s.jsx)(e.code,{children:"MSCK REPAIR TABLE overture"}),' or choosing "Load Partitions" from the table options menu.']}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"microsft-synapse",children:"Microsft Synapse"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"You will need an Azure account."}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["Create a ",(0,s.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/azure/synapse-analytics/get-started-create-workspace",children:"Synapse workspace"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Example SQL query to read places in Seattle"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT TOP 10 *\nFROM\n    OPENROWSET(\n        BULK 'https://overturemapswestus2.blob.core.windows.net/release/2023-10-19-alpha.0/theme=places/type=place/',\n        FORMAT = 'PARQUET'\n    )\nWITH\n    (\n        names VARCHAR(MAX),\n        categories VARCHAR(MAX),\n        websites VARCHAR(MAX),\n        phones VARCHAR(MAX),\n        bbox VARCHAR(200),\n        geometry VARBINARY(MAX)\n    )\n   AS\n        [result]\nWHERE\n        TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.minx')) > -122.4447744\n    AND TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.maxx')) < -122.2477071\n    AND TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.miny')) > 47.5621587\n    AND TRY_CONVERT(FLOAT, JSON_VALUE(bbox, '$.maxy')) < 47.7120663\n"})})]}),"\n"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);