"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[4798],{85705:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>b,contentTitle:()=>f,default:()=>w,frontMatter:()=>g,metadata:()=>j,toc:()=>y});var t=s(74848),i=s(28453),r=s(11470),o=s(19365),a=s(97577);const l="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nCOPY (\n  SELECT\n    *\n  FROM\n    read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/*/*')\n) TO 'all_divisions.parquet';",d="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  count(*)\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=*/*', filename=true, hive_partitioning=1);",c="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  count(*)\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=division/*', filename=true, hive_partitioning=1);",u="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  count(*)\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=division_area/*', filename=true, hive_partitioning=1);\n",h="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  count(*)\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=division_boundary/*', filename=true, hive_partitioning=1);\n",p="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  *\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=division_boundary/*', filename=true, hive_partitioning=1)\nWHERE\n  id = '085db5bb7fffffff0173c9b945a8c25f';",x="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  *\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=division_area/*', filename=true, hive_partitioning=1)\nWHERE\n  sources[1].record_id = 'R3766655';",m="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nSELECT\n  *\nFROM\n  read_parquet('s3://overturemaps-us-west-2/release/__OVERTURE_RELEASE/theme=divisions/type=division_boundary/*', filename=true, hive_partitioning=1)\nWHERE\n  bbox.xmin > -119.13728323\n  AND bbox.xmax < -95.63020817\n  AND bbox.ymin > 24.93478418\n  AND bbox.ymax < 33.43995480\n  AND subtype = 'country';",v="LOAD spatial;\nLOAD httpfs;\n-- Access the data on AWS in this example\nSET s3_region='us-west-2';\n\nCOPY (\n  SELECT\n    id,\n    names.primary as name,\n    subtype,\n    ST_GeomFromWkb(geometry) AS geometry\n  FROM\n    read_parquet('s3://overturemaps-us-west-2/release/2024-07-22.0/theme=divisions/type=division/*', filename=true, hive_partitioning=1)\n  WHERE\n    country = 'DK'\n    AND subtype IN ('locality','neighborhood')\n)\nTO\n  'overture_denmark_locality_neighborhood.shp'\nWITH (\n  FORMAT GDAL,\n  DRIVER 'ESRI Shapefile',\n  SRS 'EPSG:4326'\n);",g={title:"Divisions"},f=void 0,j={id:"guides/divisions",title:"Divisions",description:"Overview",source:"@site/docs/guides/divisions.mdx",sourceDirName:"guides",slug:"/guides/divisions",permalink:"/guides/divisions",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1723046153e3,frontMatter:{title:"Divisions"},sidebar:"docs",previous:{title:"Buildings",permalink:"/guides/buildings"},next:{title:"Places",permalink:"/guides/places"}},b={},y=[{value:"Overview",id:"overview",level:2},{value:"Dataset description",id:"dataset-description",level:2},{value:"Feature type descriptions",id:"feature-type-descriptions",level:3},{value:"Subtype descriptions",id:"subtype-descriptions",level:3},{value:"Data columns",id:"data-columns",level:3},{value:"Data access and retrieval",id:"data-access-and-retrieval",level:2},{value:"Data usage guidelines",id:"data-usage-guidelines",level:2},{value:"Data manipulation and analysis",id:"data-manipulation-and-analysis",level:2},{value:"Exporting locality and neighborhood divisions to a local shapefile",id:"exporting-locality-and-neighborhood-divisions-to-a-local-shapefile",level:4},{value:"Revision history",id:"revision-history",level:2},{value:"Version info",id:"version-info",level:3},{value:"GERS changelog",id:"gers-changelog",level:3},{value:"Support",id:"support",level:2},{value:"Feedback",id:"feedback",level:3},{value:"Discussions",id:"discussions",level:3},{value:"Issues",id:"issues",level:3}];function A(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:g}=n;return g||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The Overture divisions theme has three feature types: ",(0,t.jsx)(n.code,{children:"division"}),", ",(0,t.jsx)(n.code,{children:"division_area"}),", and ",(0,t.jsx)(n.code,{children:"division_boundary"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["There are more than 5.3 million point, line, and polygon representations of human settlements, such as such as countries, regions, states, cities, and even neighborhoods. The theme is derived from a conflation of ",(0,t.jsx)(n.a,{href:"https://www.openstreetmap.org/",children:"OpenStreetMap"})," data and ",(0,t.jsx)(n.a,{href:"https://www.geoboundaries.org/",children:"geoBoundaries"})," data and is available under an ",(0,t.jsx)(n.a,{href:"https://opendatacommons.org/licenses/odbl/",children:"ODbL"})," license. (See the ",(0,t.jsx)(n.a,{href:"https://docs.overturemaps.org/attribution/",children:"attribution page"})," for more information.)"]}),"\n",(0,t.jsx)(n.p,{children:"Divisions data can be used for many purposes, which can include, but are not limited to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"reverse-geocoding"}),"\n",(0,t.jsx)(n.li,{children:"cartographic styling and map rendering"}),"\n",(0,t.jsx)(n.li,{children:"place labels"}),"\n",(0,t.jsx)(n.li,{children:"choropleth rendering"}),"\n",(0,t.jsx)(n.li,{children:"containment checks (e.g. point-in-polygon analysis)"}),"\n",(0,t.jsx)(n.li,{children:"choosing a geometry based on your use case"}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{style:{textAlign:"center"},children:(0,t.jsx)(n.img,{alt:"Overture divisions coverage - country and region boundaries",src:s(54870).A+"",width:"2486",height:"1700"})})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.em,{children:"Overture divisions data, styled by subtype: countries in purple, region boundaries as green lines."})})})})]}),"\n",(0,t.jsx)(n.h2,{id:"dataset-description",children:"Dataset description"}),"\n",(0,t.jsx)(n.h3,{id:"feature-type-descriptions",children:"Feature type descriptions"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"division"})," is a feature type that represents an official or non-official organization of people: country, region, province, city, neighborhood, etc. \u2014 as seen from a given political perspective. It has a ",(0,t.jsx)(n.code,{children:"Point"})," geometry which gives an approximate location of the position most commonly associated with the feature. We encourage you to consult the ",(0,t.jsxs)(n.a,{href:"/schema/reference/divisions/division",children:["schema reference documentation for the ",(0,t.jsx)(n.code,{children:"division"})," feature type"]}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 count_star() \u2502   subtype    \u2502\n\u2502    int64     \u2502   varchar    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      3215202 \u2502 locality     \u2502\n\u2502       771100 \u2502 neighborhood \u2502\n\u2502       196451 \u2502 microhood    \u2502\n\u2502        36974 \u2502 county       \u2502\n\u2502        18469 \u2502 localadmin   \u2502\n\u2502         3866 \u2502 region       \u2502\n\u2502          272 \u2502 country      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"division_area"})," is a feature type that captures the shape of the land area, or land and territorial sea (maritime), belonging to a ",(0,t.jsx)(n.code,{children:"division"})," feature. It has a ",(0,t.jsx)(n.code,{children:"Polygon"})," or ",(0,t.jsx)(n.code,{children:"MultiPolygon"})," geometry. We encourage you to consult the ",(0,t.jsxs)(n.a,{href:"/schema/reference/divisions/division_area",children:["schema reference documentation for the ",(0,t.jsx)(n.code,{children:"division_area"})," feature type"]}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 count_star() \u2502   subtype    \u2502\n\u2502    int64     \u2502   varchar    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502       540557 \u2502 locality     \u2502\n\u2502       385886 \u2502 neighborhood \u2502\n\u2502        36973 \u2502 county       \u2502\n\u2502        18470 \u2502 localadmin   \u2502\n\u2502         3866 \u2502 region       \u2502\n\u2502          272 \u2502 country      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"division_boundary"})," is a feature type that represents a shared border between two ",(0,t.jsx)(n.code,{children:"division"})," features. It has a ",(0,t.jsx)(n.code,{children:"LineString"})," geometry. The geometry of a ",(0,t.jsx)(n.code,{children:"divison_boundary"})," is either wholly non-maritime, or wholly maritime. A maritime boundary is the extension of a non-maritime boundary into the water. Please consult the ",(0,t.jsxs)(n.a,{href:"/schema/reference/divisions/division_boundary",children:["schema reference documentation for the ",(0,t.jsx)(n.code,{children:"division_boundary"})," feature type"]}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 count_star() \u2502 subtype \u2502\n\u2502    int64     \u2502 varchar \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502        64107 \u2502 county  \u2502\n\u2502         7116 \u2502 region  \u2502\n\u2502          373 \u2502 country \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"division_boundary"})," feature type was introduced in the July 2024 release. It replaced the ",(0,t.jsx)(n.code,{children:"boundary"})," feature type."]})}),"\n",(0,t.jsx)(n.h3,{id:"subtype-descriptions",children:"Subtype descriptions"}),"\n",(0,t.jsxs)(n.p,{children:["Subtypes can represent each feature's administrative level, from ",(0,t.jsx)(n.code,{children:"country"})," down to ",(0,t.jsx)(n.code,{children:"microhood"}),". Subtypes can also represent a place hierarchy within a country and offer a standardized place definition for divisions. See below for a list of subtypes and their descriptions in the divisions theme:"]}),"\n",(0,t.jsxs)(g,{children:[(0,t.jsx)("summary",{children:"List of all subtypes in the divisions theme"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Subtype"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Example"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"country"})}),(0,t.jsx)(n.td,{children:"Largest unit of independent sovereignty."}),(0,t.jsx)(n.td,{children:"United States"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"dependency"})}),(0,t.jsx)(n.td,{children:"A place that is not exactly a sub-region of a country but is dependent on a parent company for defence, passport control, subsidies, etc."}),(0,t.jsx)(n.td,{children:"Puerto Rico"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"macroregion"})}),(0,t.jsx)(n.td,{children:"A bundle of regions. These exist mainly in Europe."}),(0,t.jsx)(n.td,{children:"Scotland; \xcele-de-France"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"region"})}),(0,t.jsx)(n.td,{children:"States, provinces, regions. Largest sub-country administrative unit most countries, unless they have dependencies/macroregions."}),(0,t.jsx)(n.td,{children:"Alaska; Alberta"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"macrocounty"})}),(0,t.jsx)(n.td,{children:"A bundle of counties. Again, these exist mainly in Europe."}),(0,t.jsx)(n.td,{children:"Inverness"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"county"})}),(0,t.jsx)(n.td,{children:"Counties... Largest sub-region administrative unit in most countries, unless they have macrocounties."}),(0,t.jsx)(n.td,{children:"Kings County, NY"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"localadmin"})}),(0,t.jsx)(n.td,{children:"A level of government available in some parts of the world that contains localities or populated places that themselves have no authority. Often but not exclusively found in Europe."}),(0,t.jsx)(n.td,{children:"Paris"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"locality"})}),(0,t.jsx)(n.td,{children:"A populated place that may or may not have its own administrative authority. (It won't if it belongs to a localadmin.)"}),(0,t.jsx)(n.td,{children:"Taipei"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"borough"})}),(0,t.jsx)(n.td,{children:"A local government unit, below the locality placetype."}),(0,t.jsx)(n.td,{children:"Brooklyn, Queens, etc."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"macrohood"})}),(0,t.jsx)(n.td,{children:"A super-neighborhood that contains smaller divisions of type neighborhood."}),(0,t.jsx)(n.td,{children:"BoCoCa (Boerum Hill, Cobble Hill, and Carroll Gardens)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"neighborhood"})}),(0,t.jsx)(n.td,{children:"A neighborhood. Most neighborhoods will be just this, unless there's enough granular division to warrant introducing macrohood and/or microhood divisions."}),(0,t.jsx)(n.td,{children:"Cobble Hill"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"microhood"})}),(0,t.jsx)(n.td,{children:"A mini-neighborhood that is contained within a division of type neighborhood."}),(0,t.jsx)(n.td,{children:"G\xe4tjensort in Hamburg"})]})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"data-columns",children:"Data columns"}),"\n",(0,t.jsx)(n.p,{children:"As of the July 2024 release, there are 25 columns in the divisions GeoParquet files. Each column is a property in the data."}),"\n",(0,t.jsxs)(g,{children:[(0,t.jsx)("summary",{children:"List of all columns in the divisions GeoParquet files"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502     column_name      \u2502                                                     column_type                                                      \u2502\n\u2502       varchar        \u2502                                                       varchar                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 id                   \u2502 VARCHAR                                                                                                              \u2502\n\u2502 geometry             \u2502 BLOB                                                                                                                 \u2502\n\u2502 bbox                 \u2502 STRUCT(xmin FLOAT, xmax FLOAT, ymin FLOAT, ymax FLOAT)                                                               \u2502\n\u2502 version              \u2502 INTEGER                                                                                                              \u2502\n\u2502 update_time          \u2502 VARCHAR                                                                                                              \u2502\n\u2502 sources              \u2502 STRUCT(property VARCHAR, dataset VARCHAR, record_id VARCHAR, confidence DOUBLE)[]                                    \u2502\n\u2502 subtype              \u2502 VARCHAR                                                                                                              \u2502\n\u2502 wikidata             \u2502 VARCHAR                                                                                                              \u2502\n\u2502 population           \u2502 INTEGER                                                                                                              \u2502\n\u2502 names                \u2502 STRUCT("primary" VARCHAR, common MAP(VARCHAR, VARCHAR), rules STRUCT(variant VARCHAR, "language" VARCHAR, "value" \u2026  \u2502\n\u2502 class                \u2502 VARCHAR                                                                                                              \u2502\n\u2502 divisions            \u2502 VARCHAR[]                                                                                                            \u2502\n\u2502 is_disputed          \u2502 BOOLEAN                                                                                                              \u2502\n\u2502 perspectives         \u2502 STRUCT("mode" VARCHAR, countries VARCHAR[])                                                                          \u2502\n\u2502 local_type           \u2502 MAP(VARCHAR, VARCHAR)                                                                                                \u2502\n\u2502 country              \u2502 VARCHAR                                                                                                              \u2502\n\u2502 region               \u2502 VARCHAR                                                                                                              \u2502\n\u2502 hierarchies          \u2502 STRUCT(division_id VARCHAR, subtype VARCHAR, "name" VARCHAR)[][]                                                     \u2502\n\u2502 parent_division_id   \u2502 VARCHAR                                                                                                              \u2502\n\u2502 norms                \u2502 STRUCT(driving_side VARCHAR)                                                                                         \u2502\n\u2502 capital_division_ids \u2502 VARCHAR[]                                                                                                            \u2502\n\u2502 division_id          \u2502 VARCHAR                                                                                                              \u2502\n\u2502 filename             \u2502 VARCHAR                                                                                                              \u2502\n\u2502 theme                \u2502 VARCHAR                                                                                                              \u2502\n\u2502 type                 \u2502 VARCHAR                                                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 25 rows                                                                                                                                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"data-access-and-retrieval",children:"Data access and retrieval"}),"\n",(0,t.jsx)(n.p,{children:"Overture's six data themes, including divisions, are freely available on both Amazon S3 and Microsoft Azure Blob Storage at these locations:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Provider"}),(0,t.jsx)(n.th,{children:"Location"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Amazon S3"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"s3://overturemaps-us-west-2/release/"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Azure Blob Storage"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"https://overturemapswestus2.blob.core.windows.net/release/"})})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Overture distributes its datasets as ",(0,t.jsx)(n.a,{href:"https://geoparquet.org/",children:"GeoParquet"}),", a column-oriented spatial data format that is a backwards-compatible extension of ",(0,t.jsx)(n.a,{href:"https://parquet.apache.org/",children:"Apache Parquet"}),'. Parquet (and GeoParquet) is optimized for "cloud-native" queries, which means you can use many developer-friendly tools to efficiently fetch column "chunks" of cloud-hosted data. We encourage users who are new to GeoParquet to consult ',(0,t.jsx)(n.a,{href:"https://guide.cloudnativegeo.org/geoparquet/",children:"this guide"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://docs.overturemaps.org/getting-data/",children:"The Getting Data section of this documentation"})," offers instructions for using several tools to access Overture data, including DuckDB and Overture's Python command-line tool. See examples below for divisions."]}),"\n",(0,t.jsxs)(r.default,{children:[(0,t.jsxs)(o.default,{value:"Python Command-line Tool",label:"Python Command-line Tool",default:!0,children:[(0,t.jsxs)(n.p,{children:["You can find Overture's official Python command-line tool ",(0,t.jsx)(n.a,{href:"https://github.com/OvertureMaps/overturemaps-py",children:"here"}),"."]}),(0,t.jsx)(n.p,{children:"This tool helps to download Overture data within a region of interest and converts it to a few different file formats. In this example, a bounding box is passed to obtain all divisions data around Boston, MA:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"overturemaps download --bbox=-71.068,42.353,-71.058,42.363 -f geojson --type=divisions -o boston.geojson\n"})}),(0,t.jsx)(n.p,{children:"Right now there is only one option to the overturemaps utility: download. It will download Overture Maps data with an optional bounding box into the specified file format. When specifying a bounding box, only the minimum data is transferred. The result is streamed out and can handle arbitrarily large bounding boxes."}),(0,t.jsx)(n.p,{children:"Command-line options:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--bbox"})," (optional): west, south, east, north longitude and latitude coordinates. When omitted the entire dataset for the specified type will be downloaded"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"-f"}),' (required: one of "geojson", "geojsonseq", "geoparquet"): output format']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--output/-o"})," (optional): Location of output file. When omitted output will be written to stdout."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--type/-t"})," (required): The Overture map data type to be downloaded. Examples of types are building for building footprints, place for POI places data, etc. Run overturemaps download --help for the complete list of allowed types"]}),"\n"]}),(0,t.jsx)(n.p,{children:"This downloads data directly from Overture's S3 bucket without interacting with any other servers. By including bounding box extents on each row in the Overture distribution, the underlying Parquet readers use the Parquet summary statistics to download the minimum amount of data necessary to extract data from the desired region."})]}),(0,t.jsxs)(o.default,{value:"DuckDB",label:"DuckDB",default:!0,children:[(0,t.jsxs)(n.p,{children:["First, follow the ",(0,t.jsx)(n.a,{href:"/getting-data/duckdb/",children:"setup guide for DuckDB"}),"."]}),(0,t.jsx)(a.A,{query:l}),(0,t.jsx)(n.p,{children:"Note: Running this query will result in a ~6.4GB file."})]})]}),"\n",(0,t.jsx)(n.h2,{id:"data-usage-guidelines",children:"Data usage guidelines"}),"\n",(0,t.jsx)(n.p,{children:"We recommend querying and downloading only the Overture data you need.\nIf you have a particular geographic area of interest, there are several options for using a simple bounding box to extract divisions data."}),"\n",(0,t.jsxs)(r.default,{children:[(0,t.jsxs)(o.default,{value:"Overture Maps Explorer",label:"Overture Maps Explorer",default:!0,children:[(0,t.jsxs)(n.p,{children:["To quickly view and download modest amounts of data, you can use the ",(0,t.jsx)(n.a,{href:"https://explore.overturemaps.org/#15.07/41.89731/12.47626",children:"Overture Maps Explorer website"}),"."]}),(0,t.jsxs)(n.p,{children:["To download data: Pan to the area you are interested in, turn off the other layers, then click ",(0,t.jsx)(n.code,{children:"Download Visible"}),"."]}),(0,t.jsx)(n.p,{children:"This will download the area visible on your screen."}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{style:{textAlign:"center"},children:(0,t.jsx)(n.img,{alt:"Exploring divsions data in NYC",src:s(37576).A+"",width:"1447",height:"800"})})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsxs)(n.em,{children:["Exploring divisions data in NYC using ",(0,t.jsx)(n.a,{href:"https://explore.overturemaps.org/#10.35/40.802/-73.9407",children:"Overture's Explore tool"}),"."]})})})})]})]}),(0,t.jsxs)(o.default,{value:"Python Command-line Tool",label:"Python Command-line Tool",default:!0,children:[(0,t.jsxs)(n.p,{children:["First, follow the ",(0,t.jsx)(n.a,{href:"/getting-data/overturemaps-py/",children:"setup guide for the Python Command-line Tool"}),"."]}),(0,t.jsxs)(n.p,{children:["You can alter the ",(0,t.jsx)(n.code,{children:"bbox"})," value to download a particular area."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"overturemaps download --bbox=-71.068,42.353,-71.058,42.363 -f geojson --type=divisions -o boston.geojson\n"})})]}),(0,t.jsxs)(o.default,{value:"DuckDB",label:"DuckDB",default:!0,children:[(0,t.jsxs)(n.p,{children:["First, follow the ",(0,t.jsx)(n.a,{href:"/getting-data/duckdb/",children:"setup guide for DuckDB"}),". DuckDB allows you to pass a bounding box in your query to select features in a specified geogrpahic area."]}),(0,t.jsx)(n.p,{children:"To create a bounding box, find the southwest-most latitude/longitude and northeast-most latitude/longitde of the area you're interested in."}),(0,t.jsx)(n.p,{children:"For our query, the US / Mexico border area, those values would be:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Southwest-most point"}),": 24.93478418, -119.13728323"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Northeast-most point"}),": 33.43995480, -95.63020817"]}),"\n"]}),(0,t.jsx)(n.p,{children:"Then, we'll use those coordinates to develop the min and max values for our bounding box:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"bbox.xmin > -119.13728323\nbbox.xmax < -95.63020817\nbbox.ymin > 24.93478418\nbbox.ymax < 33.43995480\n"})}),(0,t.jsx)(n.p,{children:"Now, we'll use these coordinates to construct our query. This example returns results for the country boundary between the US and Mexico:"}),(0,t.jsx)(a.A,{query:m})]})]}),"\n",(0,t.jsx)(n.h2,{id:"data-manipulation-and-analysis",children:"Data manipulation and analysis"}),"\n",(0,t.jsx)(n.p,{children:"Using these queries, you can get counts for each feature type in divisions."}),"\n",(0,t.jsxs)(r.default,{children:[(0,t.jsx)(o.default,{value:"total counts",label:"total counts",default:!0,children:(0,t.jsx)(a.A,{query:d})}),(0,t.jsx)(o.default,{value:"division counts",label:"division counts",default:!0,children:(0,t.jsx)(a.A,{query:c})}),(0,t.jsx)(o.default,{value:"division_area counts",label:"division_area counts",default:!0,children:(0,t.jsx)(a.A,{query:u})}),(0,t.jsx)(o.default,{value:"division_boundary counts",label:"division_boundary counts",default:!0,children:(0,t.jsx)(a.A,{query:h})})]}),"\n",(0,t.jsxs)(r.default,{children:[(0,t.jsx)(o.default,{value:"query using an Overture ID",label:"query using an Overture ID",default:!0,children:(0,t.jsx)(a.A,{query:p})}),(0,t.jsx)(o.default,{value:"query using an OSM ID",label:"query using an OSM ID",default:!0,children:(0,t.jsx)(a.A,{query:x})})]}),"\n",(0,t.jsx)(n.h4,{id:"exporting-locality-and-neighborhood-divisions-to-a-local-shapefile",children:"Exporting locality and neighborhood divisions to a local shapefile"}),"\n",(0,t.jsx)(n.p,{children:"This query will return a subset of fields and the geometry for each locality and neighborhood division entity in Denmark."}),"\n",(0,t.jsx)(a.A,{query:v}),"\n",(0,t.jsx)(n.h2,{id:"revision-history",children:"Revision history"}),"\n",(0,t.jsx)(n.h3,{id:"version-info",children:"Version info"}),"\n",(0,t.jsxs)(n.p,{children:["You can find the most recent release notes ",(0,t.jsx)(n.a,{href:"https://docs.overturemaps.org/release/latest/",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"gers-changelog",children:"GERS changelog"}),"\n",(0,t.jsx)(n.p,{children:"The GERS changelog captures any changes in Overture features between this release and the previous release. The changelog is available as Parquet files \u2014 partitioned by theme, type, and change type \u2014 at the following locations on Azure and AWS."}),"\n",(0,t.jsxs)(n.p,{children:["You can find the most recent GERS changelog ",(0,t.jsx)(n.a,{href:"https://docs.overturemaps.org/release/latest/#global-entity-reference-system-gers-changelog",children:"here"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The types of feature changes in the changelog include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"added"}),": Feature with this ID is new (was not present in the previous release)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"removed"}),": Feature with this ID was present in the previous release, but not this release."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data_changed"}),": The feature with this ID contains a change in attributes (geometry or otherwise) from the feature with this ID in the previous release."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unchanged"}),": The feature with this ID in this release matches the geometry and attributes of the feature with this ID in the previous release."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,t.jsx)(n.h3,{id:"feedback",children:"Feedback"}),"\n",(0,t.jsxs)(n.p,{children:["You can find a list of Overture repositories ",(0,t.jsx)(n.a,{href:"https://github.com/orgs/OvertureMaps/repositories",children:"here"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Discussions are generally reserved for broader conversations around the divisions project as a whole (supporting a new workflow, adding a dataset, null attributes)."}),"\n",(0,t.jsx)(n.p,{children:"Issues are generally reserved for more specific concerns with specific entities in the dataset (geometry validation, missing entities, duplicate entities) or country-specific concerns."}),"\n",(0,t.jsx)(n.h3,{id:"discussions",children:"Discussions"}),"\n",(0,t.jsx)(n.p,{children:"You can start and add to discussions in each of the public Overture repositories. Some examples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"General Overture Discussions"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/orgs/OvertureMaps/discussions",children:"https://github.com/orgs/OvertureMaps/discussions"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Discussions"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/OvertureMaps/data/discussions",children:"https://github.com/OvertureMaps/data/discussions"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Schema Discussions"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/OvertureMaps/schema/discussions",children:"https://github.com/OvertureMaps/schema/discussions"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Discussions around Overture's divisions data should be filed in the Data repository."}),"\n",(0,t.jsx)(n.h3,{id:"issues",children:"Issues"}),"\n",(0,t.jsx)(n.p,{children:"You can start and add to issues in each of the public Overture repositories, too. Some examples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Issues"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/OvertureMaps/data/issues",children:"https://github.com/OvertureMaps/data/issues"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Schema Issues"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/OvertureMaps/schema/issues",children:"https://github.com/OvertureMaps/schema/issues"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tiles issues"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/OvertureMaps/overture-tiles/issues",children:"https://github.com/OvertureMaps/overture-tiles/issues"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Issues around Overture's divisions data should be filed in the data repository."})]})}function w(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(A,{...e})}):A(e)}},19365:(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});s(96540);var t=s(18215);const i={tabItem:"tabItem_Ymn6"};var r=s(74848);function o(e){let{children:n,hidden:s,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,o),hidden:s,children:n})}},11470:(e,n,s)=>{s.r(n),s.d(n,{default:()=>A});var t=s(96540),i=s(18215),r=s(23104),o=s(56347),a=s(205),l=s(57485),d=s(31682),c=s(89466);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:i}}=e;return{value:n,label:s,attributes:t,default:i}}))}(s);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:s}=e;const i=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function m(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,r=h(e),[o,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[d,u]=x({queryString:s,groupId:i}),[m,v]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,c.Dv)(s);return[i,(0,t.useCallback)((e=>{s&&r.set(e)}),[s,r])]}({groupId:i}),g=(()=>{const e=d??m;return p({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),v(e)}),[u,v,r]),tabValues:r}}var v=s(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(74848);function j(e){let{className:n,block:s,selectedValue:t,selectValue:o,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const n=e.currentTarget,s=l.indexOf(n),i=a[s].value;i!==t&&(d(n),o(i))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":s},n),children:a.map((e=>{let{value:n,label:s,attributes:r}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...r,className:(0,i.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function b(e){let{lazy:n,children:s,selectedValue:i}=e;const r=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function y(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,f.jsx)(j,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function A(e){const n=(0,v.A)();return(0,f.jsx)(y,{...e,children:u(e.children)},String(n))}},97577:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(21432),i=s(44586),r=s(74848);function o(e){const{siteConfig:{customFields:n}}=(0,i.A)();var s=e.query.replace("__OVERTURE_RELEASE",n.overtureRelease);s=(s=s.replace("__ATHENA_OVERTURE_RELEASE","v"+n.overtureRelease.replaceAll(".","_").replaceAll("-","_"))).replace("__PMTILES_OVERTURE_RELEASE",n.overtureRelease.split(".",1));var o=e.language||"sql";return(0,r.jsx)(t.default,{language:o,title:e.title,children:s})}},54870:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/divisions-admin0-admin1-coverage-ff1a8d4c6d68c88047b34d1f9c9109be.png"},37576:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/divisions-us-a2446b490dd8e4932c0e515fbb238799.gif"}}]);