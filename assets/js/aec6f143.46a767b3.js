"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[338],{80315:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/05/16/land-cover","metadata":{"permalink":"/blog/2024/05/16/land-cover","source":"@site/blog/2024-05-16-land-cover.mdx","title":"Land cover is live","description":"land cover gif","date":"2024-05-16T00:00:00.000Z","tags":[],"readingTime":2.31,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Land cover is live"},"unlisted":false,"nextItem":{"title":"Exploring our beta release","permalink":"/blog/2024/04/22/beta-release"}},"content":"![land cover gif](/img/blog/lc.gif)\\n\\n## Mapmakers rejoice! \\n\\nThe [May release](https://docs.overturemaps.org/release/latest) of Overture Maps includes new high-resolution land cover data *and* new cartographic schema properties.\\n\\nOur `land_cover` layer is vectorized data derived from the [European Space Agency\u2019s 2020 WorldCover (10m) rasters](https://esa-worldcover.org/en). It\'s similar to the land cover layer in the [Daylight](https://daylightmap.org/2023/10/11/landcover.html) map distribution, but Overture Maps added higher-resolution data (zoom level 15) with more detail and land cover classes. You\'ll find 10 subtypes in the new data: snow, forest, urban, grass, crop, barren, wetland, moss, mangrove, and shrub. \\n\\nOur May release also includes schema properties that offer cartographic \\"hints\\" for optimal use of Overture Maps data in mapmaking. We added `min_zoom` and `max_zoom` to define the recommended zooms for each resolution of land cover, using the common \u201cslippy maps\u201d zoom level specification. This is a first step toward improving the user experience for mapmakers. We plan to expand these properties in future releases of Overture Maps data.\\n\\n## Exploring land cover\\n\\nIn the example below, we\'ll show you how to extract, process, and visualize land cover data for an area of interest using [lonboard](https://developmentseed.org/lonboard/latest/) and the Overture Maps Python command-line tool. We recommend that you consult [the Overture Maps buildings example](https://developmentseed.org/lonboard/latest/examples/overture-maps/ ) in the lonboard docs to better understand the methods used here. \\n\\n![land cover](/img/blog/notebook-overture-lc.png)\\n\\nYou\'ll need to install [lonboard](https://developmentseed.org/lonboard/latest/#install) and [overturemaps-py](https://github.com/OvertureMaps/overturemaps-py) before you get started. \\n\\n```\\npip install overturemaps\\n```\\n\\n``` python\\nimport pandas as pd\\nimport geopandas as gpd\\nimport overturemaps \\nfrom shapely import wkb\\nfrom lonboard import Map, PolygonLayer\\nfrom lonboard.colormap import apply_categorical_cmap\\n```\\n\\n``` python\\n# specify bounding box\\nbbox =  -78.6429, 39.463, -73.7806, 41.6242\\n```\\n\\n``` python\\n# read in Overture Maps land_cover data type\\ntable = overturemaps.record_batch_reader(\\"land_cover\\", bbox).read_all()\\ntable = table.combine_chunks()\\n```\\n\\n``` python\\n# convert to dataframe\\ndf = table.to_pandas()\\n```\\n\\n``` python\\n# filter for higher resolution land_cover features\\ndf_h = df[df.cartography.apply(lambda x: x[\'min_zoom\'] == 8)]\\n```\\n\\n``` python\\n# create color map for land_cover subtypes, loosely based on natural-color palette: https://www.shadedrelief.com/shelton/c.html\\ncolor_map = {\\n    \\"urban\\": [167, 162, 186],\\n    \\"forest\\": [134, 178, 137],\\n    \\"barren\\": [245, 237, 213],\\n    \\"shrub\\": [239, 218, 182],\\n    \\"grass\\": [254, 239, 173],\\n    \\"crop\\": [222, 223, 154],\\n    \\"wetland\\": [158, 207, 195], \\n    \\"mangrove\\": [83, 171, 128],\\n    \\"moss\\": [250, 230, 160],\\n    \\"snow\\": [255, 255, 255],\\n    #\\"none\\": [108, 159, 184],   \\n}\\n```\\n\\n``` python\\n# apply color map to land_cover subtypes\\ncolors = apply_categorical_cmap(df_h.subtype, color_map)\\n```\\n\\n``` python\\n# dataframe to geodataframe, set crs\\ngdf = gpd.GeoDataFrame(\\n    df_h, \\n    geometry=df_h[\'geometry\'].apply(wkb.loads), \\n    crs=\\"EPSG:4326\\"\\n)\\n```\\n\\n``` python\\n# reproject to Pennsylvania State Plane (https://epsg.io/2272) \\n# gdf = gdf.to_crs(2272)\\n```\\n\\n``` python\\n# create map layer \\nlayer = PolygonLayer.from_geopandas(\\n    gdf= gdf[[\'id\',\'subtype\', \'cartography\', \'geometry\']].reset_index(drop=True),\\n    get_fill_color=colors,\\n    get_line_color=colors,\\n)\\n```\\n\\n``` python\\n#render map\\nview_state = {\\n    \\"longitude\\": -76.2,\\n    \\"latitude\\": 39.6,\\n    \\"zoom\\": 8,\\n    \\"pitch\\": 65,\\n    \\"bearing\\": 5,\\n}\\nm = Map(layer, view_state=view_state)\\nm\\n```"},{"id":"/2024/04/22/beta-release","metadata":{"permalink":"/blog/2024/04/22/beta-release","source":"@site/blog/2024-04-22-beta-release.mdx","title":"Exploring our beta release","description":"Highlights from Overture Maps beta release","date":"2024-04-22T00:00:00.000Z","tags":[],"readingTime":2.965,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Exploring our beta release","description":"Highlights from Overture Maps beta release"},"unlisted":false,"prevItem":{"title":"Land cover is live","permalink":"/blog/2024/05/16/land-cover"},"nextItem":{"title":"Welcome!","permalink":"/blog/2024/04/21/welcome"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\nLast week Overture Maps [announced the beta release](https://overturemaps.org/overture-maps-foundation-releases-beta-of-its-first-open-map-dataset/) of our schema and data. After months of hard work and steady improvements, we are nearing production-level stability. In a series of posts over the next few weeks -- starting with this one -- we\u2019ll unpack the highlights and improvements you\'ll see in this release and beyond. \\n\\n## Making geospatial fast\\nThe first thing you\'ll notice is how much faster you can [pull Overture Maps data out of the cloud](https://docs.overturemaps.org/getting-data/locally/). We made this possible by working closely with open-source collaborators on the repartitioning and [spatial optimization](https://cloudnativegeo.org/blog/2024/03/coming-soon-geoparquet-1.1/) of our GeoParquet files. Meanwhile, our friends at DuckDB, one of our favorite SQL tools, [added a feature](https://github.com/duckdb/duckdb/pull/10314) that improves the performance of queries with bounding boxes.\\n\\n<details>\\n\\n<summary>Query speeds have improved significantly from our February release to the April beta release. This example compares DuckDB queries for buildings in Philadelphia. [See here for more information about our performance testing](https://github.com/opengeospatial/geoparquet/discussions/188#discussioncomment-8909348).</summary>\\n\\n    <Tabs>\\n        <TabItem value=\\"february\\" label=\\"2024-02-15-alpha.0 release\\" default>\\n            ```\\n            SELECT \\n            *\\n            FROM \\n                read_parquet(\'s3://overturemaps-us-west-2/release/2024-02-15-alpha.0/theme=buildings/type=building/*\', filename=true, hive_partitioning=1)\\n            WHERE \\n                bbox.minx > -75.60154\\n                AND bbox.maxx < -74.955763\\n                AND bbox.miny > 39.867004\\n                AND bbox.maxy < 40.137992;\\n            ```\\n            820,915 buildings   \\n            ~120s\\n        </TabItem>\\n\\n    \\n        <TabItem value=\\"april\\" label=\\"2024-04-16-beta.0 release\\" default>\\n            ```\\n            SELECT \\n            *\\n            FROM   \\n                read_parquet(\'s3://overturemaps-us-west-2/release/2024-04-16-beta.0/theme=buildings/type=building/*\', filename=true, hive_partitioning=1)\\n            WHERE \\n                bbox.xmin > -75.60154\\n                AND bbox.xmax < -74.955763\\n                AND bbox.ymin > 39.867004\\n                AND bbox.ymax < 40.137992\\n            ```\\n            852,487 buildings    \\n            ~25s\\n        </TabItem>\\n    </Tabs>\\n</details>\\n\\nWe\'re continuing to make things faster and easier for users. Along with the folks at Development Seed, an [Overture Maps Foundation member](https://overturemaps.org/about/members/), we\'re [building special tools for Overture Maps data on top of lonboard](https://developmentseed.org/lonboard/latest/examples/overture-maps/), their Python library for visualizing large geospatial datasets in Jupyter. And recently our friends at Wherobots [took a comprehensive look](https://wherobots.com/overture-maps-data-cloud-native-geoparquet-apache-sedona/) at how our use of GeoParquet makes querying and analyzing our data with Apache Sedona very efficient. \\n\\nAs you can see, we\'re moving forward with the community to iterate on data, software, and specifications with the shared goal of making geospatial **_fast_**.\\n\\n## Easier-to-use schema\\nAnother highlight of the beta release is the transition to an easier-to-use schema for our administrative boundary data. We first [explored this idea](https://github.com/OvertureMaps/schema/discussions/117) with the Overture Maps community in February, and after two short months of work, the [new divisions schema and data](https://docs.overturemaps.org/guides/divisions/) are ready to go. Here\'s a query to `divisions` that grabs geometries for all the countries in the world:\\n\\n```\\nSELECT *\\n   FROM read_parquet(\'s3://overturemaps-us-west-2/release/2024-04-16-beta.0/theme=divisions/type=division_area/*\', filename=true, hive_partitioning=1)\\nWHERE subtype = \'country\';\\n```\\n \\n You can see that the `divisions` query above is much simpler than a comparable query to `admins`:\\n\\n\\n```\\nWITH admins AS (\\n    SELECT *\\n    FROM read_parquet(\'s3://overturemaps-us-west-2/release/2024-04-16-beta.0/theme=admins/type=*/*\', filename=true, hive_partitioning=1)\\n  )\\n\\n  SELECT *\\n    FROM admins country_locality\\n    JOIN admins country_area\\n      ON country_area.locality_id = country_locality.id\\n   WHERE country_locality.locality_type = \'country\';\\n\\n```    \\n\\nWe plan to [deprecate admins](https://docs.overturemaps.org/release-notes/) by the July release. In the meantime, both `admins` and `divisions` will be available to users. \\n\\n## Bridges, islands, waterfalls, and more!\\nWe added more rich detail to our `base` layer in this release, including an `infrastructure` type with familiar features from [Facebook\u2019s Daylight map distribution](https://daylightmap.org/). We also added new subtypes and classes for the `land`, `land_use`, and `water` feature types. You\'ll find a comprehensive listing of the subtypes and classes for each feature type in our [schema reference docs](https://docs.overturemaps.org/schema/reference/base/infrastructure). Ready to make your own map? We have a [tutorial to help you get started](https://docs.overturemaps.org/examples/build-a-map/#13/47.6/-122.33/0/45).\\n  \\n## Stay tuned for more highlights\\nWe\'ll be back soon with more posts that explore our path from the beta release to production. In the meantime, we invite you to [get started with our data](https://docs.overturemaps.org/getting-data/) and share with us your [comments and feedback](https://github.com/OvertureMaps/data/discussions)."},{"id":"/2024/04/21/welcome","metadata":{"permalink":"/blog/2024/04/21/welcome","source":"@site/blog/2024-04-21-welcome.mdx","title":"Welcome!","description":"Welcome to the Overture Maps engineering blog! We\'re excited to tell the technical stories behind this big, exciting, ambitious, intensely collaborative project we\u2019ve been working on for more than a year. The engineers building Overture Maps are eager to connect with our developer community. In the posts we publish in the coming months, you\u2019ll hear from team members who work at Amazon, Meta, Microsoft, TomTom, Esri, Development Seed, Precisely, and more. And we\u2019d like to hear from you: feedback and contributions from folks working with our data and schema are crucial to our success. Thanks for joining us on this journey. We\u2019re glad you\u2019re here.","date":"2024-04-21T00:00:00.000Z","tags":[],"readingTime":0.525,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Welcome!"},"unlisted":false,"prevItem":{"title":"Exploring our beta release","permalink":"/blog/2024/04/22/beta-release"}},"content":"Welcome to the Overture Maps engineering blog! We\'re excited to tell the technical stories behind this big, exciting, ambitious, intensely collaborative project we\u2019ve been [working on for more than a year](https://overturemaps.org/looking-forward-to-2024/). The engineers building Overture Maps are eager to connect with our developer community. In the posts we publish in the coming months, you\u2019ll hear from team members who work at Amazon, Meta, Microsoft, TomTom, Esri, Development Seed, Precisely, and more. And we\u2019d like to hear from you: [feedback and contributions](https://github.com/OvertureMaps/data/discussions) from folks working with our data and schema are crucial to our success. Thanks for joining us on this journey. We\u2019re glad you\u2019re here."}]}}')}}]);