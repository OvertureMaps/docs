"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[5753],{62168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var s=n(74848),r=n(28453);n(11470),n(19365),n(97577);const a={title:"2024-07-22.0",slug:"latest"},i=void 0,l={permalink:"/release/latest",source:"@site/release-blog/2024/2024-07-22.0.mdx",title:"2024-07-22.0",description:"Overture's 2024-07-22.0 data release and v1.0.0 of the schema are now available. The base, buildings, divisions, and places themes have reached General Availability (GA). The transportation theme remains in beta, and users can anticipate additional breaking changes to the transportation schema. Also in this release, we launched a new theme called addresses, available in alpha. We will be making significant changes to the addresses schema and updating and adding to the addresses data over the next several months.",date:"2024-07-22T00:00:00.000Z",tags:[],hasTruncateMarker:!1,authors:[],frontMatter:{title:"2024-07-22.0",slug:"latest"},unlisted:!1,nextItem:{title:"2024-06-13-beta.1",permalink:"/release/2024-06-13-beta.0"}},d={authorsImageUrls:[]},o=[{value:"Microsoft Azure:",id:"microsoft-azure",level:5},{value:"Amazon S3:",id:"amazon-s3",level:5},{value:"New theme: addresses",id:"new-theme-addresses",level:3},{value:"Global Entity Reference System (GERS) changelog",id:"global-entity-reference-system-gers-changelog",level:3},{value:"Breaking changes",id:"breaking-changes",level:3},{value:"Deprecations",id:"deprecations",level:3},{value:"Theme-specific updates",id:"theme-specific-updates",level:3},{value:"Attribution",id:"attribution",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsxs)(t.strong,{children:["Overture's ",(0,s.jsx)(t.code,{children:"2024-07-22.0"})," data release and ",(0,s.jsx)(t.code,{children:"v1.0.0"})," of the schema are now available."]})," The base, buildings, divisions, and places themes have reached General Availability (GA). The transportation theme remains in beta, and users can anticipate additional breaking changes to the transportation schema. Also in this release, we launched a new theme called addresses, available in alpha. We will be making significant changes to the addresses schema and updating and adding to the addresses data over the next several months."]}),"\n",(0,s.jsx)(t.p,{children:"The datasets are available as GeoParquet files stored on AWS and Azure. The release paths are:"}),"\n",(0,s.jsx)(t.h5,{id:"microsoft-azure",children:"Microsoft Azure:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"wasbs://release@overturemapswestus2.blob.core.windows.net/2024-07-22.0\n"})}),"\n",(0,s.jsx)(t.h5,{id:"amazon-s3",children:"Amazon S3:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"s3://overturemaps-us-west-2/release/2024-07-22.0\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can access the datasets by following the process outlined ",(0,s.jsx)(t.a,{href:"https://docs.overturemaps.org/getting-data/",children:"here"}),". We encourage users to report bugs and provide feedback on the data, schema, and GERS on one of our Overture GitHub repositories:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/schema",children:"Schema"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/data",children:"Data"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/docs",children:"Docs"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/overturemaps-py",children:"Python command-line tool"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/io-site",children:"Explore site"})}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"new-theme-addresses",children:"New theme: addresses"}),"\n",(0,s.jsxs)(t.p,{children:["In this release, we added a new theme called ",(0,s.jsx)(t.a,{href:"/schema/reference/addresses/address",children:"addresses"})," that includes over 200 million address features for 14 countries. We are releasing this theme in alpha and anticipate significant changes over the next several releases. We invite the Overture community to test the addresses schema and data and offer feedback via the ",(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/data/issues",children:"data"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/schema/issues",children:"schema"})," repos."]}),"\n",(0,s.jsx)(t.h3,{id:"global-entity-reference-system-gers-changelog",children:"Global Entity Reference System (GERS) changelog"}),"\n",(0,s.jsx)(t.p,{children:"The GERS changelog captures any changes in Overture features between this release and the previous release. The changelog is available as Parquet files \u2014 partitioned by theme, type, and change type \u2014 at the following locations on Azure and AWS:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"wasbs://changelog@overturemapswestus2.blob.core.windows.net/2024-07-22.0\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"s3://overturemaps-us-west-2/changelog/2024-07-22.0\n"})}),"\n",(0,s.jsx)(t.p,{children:"The types of feature changes in the changelog include:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"added"}),": Feature with this ID is new (was not present in the previous release)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"removed"}),": Feature with this ID was present in the previous release, but not this release."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"data_changed"}),": The feature with this ID contains a change in attributes (geometry or otherwise) from the feature with this ID in the previous release."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"unchanged"}),": The feature with this ID in this release matches the geometry and attributes of the feature with this ID in the previous release."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"breaking-changes",children:"Breaking changes"}),"\n",(0,s.jsxs)(t.p,{children:["In the divisions theme, we changed the ",(0,s.jsx)(t.code,{children:"boundary"})," feature type to ",(0,s.jsx)(t.code,{children:"division_boundary"}),". Feature types in Overture must be distinct and unique across all themes, and ",(0,s.jsx)(t.code,{children:"boundary"})," did not meet those conditions. We realize that changing the name of a feature type is a major change, and we do not anticipate doing this again without giving our users plenty of advance notice."]}),"\n",(0,s.jsxs)(t.p,{children:["Also in the divisions theme, we changed the ",(0,s.jsx)(t.code,{children:"divisions"})," property to ",(0,s.jsx)(t.code,{children:"divisions_ids"})," to fix relationship modeling in the schema. The logic is that a property or nested sub-property that contains a foreign key reference to another feature by Overture ID must end in the suffix ",(0,s.jsx)(t.code,{children:"_id"}),". More information about this change here: ",(0,s.jsx)(t.a,{href:"https://github.com/OvertureMaps/schema/pull/215",children:"https://github.com/OvertureMaps/schema/pull/215"})]}),"\n",(0,s.jsxs)(t.p,{children:["We removed ",(0,s.jsx)(t.code,{children:"update_time"})," from a top-level schema property to a property within the sources structure. For example, the Microsoft buildings ",(0,s.jsx)(t.code,{children:"update_time"})," comes from Microsoft's imagery capture data:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"[{property=, dataset=Microsoft ML Buildings, record_id=709fc8cf0b55, update_time=2023-06-23T00:00:00.000Z, confidence=null}]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"deprecations",children:"Deprecations"}),"\n",(0,s.jsxs)(t.p,{children:["In the transportation theme, we deprecated the ",(0,s.jsx)(t.code,{children:"road"})," JSON column in the June release and removed it in the current release. We replaced the ",(0,s.jsx)(t.code,{children:"road"})," JSON column with structured Parquet columns for road attributes."]}),"\n",(0,s.jsx)(t.p,{children:"In April, we deprecated the admins theme and offered the divisions theme as a replacement. We removed admins in this release and are no longer supporting it. You can still access the admins data and schema in previous Overture releases."}),"\n",(0,s.jsx)(t.h3,{id:"theme-specific-updates",children:"Theme-specific updates"}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"The base, buildings, divisions, and places themes are now in the General Availability (GA) phase. The transportation theme is in beta, and the addresses theme is in alpha."})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Addresses"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["added over 200 million addresses for 14 countries, pulling data from many ",(0,s.jsx)(t.a,{href:"https://docs.overturemaps.org/attribution/",children:"sources"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Base"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"made incremental updates from OSM, based on Daylight v1.50"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Buildings"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"made regular updates to buildings, including adding the latest open data from OSM, Esri Community Maps, and Microsoft"}),"\n",(0,s.jsxs)(t.li,{children:["removed ",(0,s.jsx)(t.code,{children:"update_time"})," from top level buildings schema"]}),"\n",(0,s.jsxs)(t.li,{children:["added ",(0,s.jsx)(t.code,{children:"update_time"})," to the sources structure"]}),"\n",(0,s.jsxs)(t.li,{children:["added ",(0,s.jsx)(t.code,{children:"update_time"})," to the sources structure for building parts"]}),"\n",(0,s.jsxs)(t.li,{children:["capped ",(0,s.jsx)(t.code,{children:"height"})," and ",(0,s.jsx)(t.code,{children:"roof_height"})," at 850 meters and discarded values over that limit"]}),"\n",(0,s.jsxs)(t.li,{children:["added a test to check that building ",(0,s.jsx)(t.code,{children:"min_height"})," is less than ",(0,s.jsx)(t.code,{children:"height"})]}),"\n",(0,s.jsx)(t.li,{children:"included building parts inside building relation outline even when part is not an explicit member"}),"\n",(0,s.jsx)(t.li,{children:"resolved issue with building and building_part polygons having identical geometries"}),"\n",(0,s.jsx)(t.li,{children:"added classification for bridge structures to schema"}),"\n",(0,s.jsxs)(t.li,{children:["added ",(0,s.jsx)(t.code,{children:"is_underground"})," to all buildings"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Divisions"})}),"\n",(0,s.jsxs)(t.admonition,{type:"warning",children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"BREAKING CHANGES"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["changed the name of the ",(0,s.jsx)(t.code,{children:"boundary"})," feature type to ",(0,s.jsx)(t.code,{children:"division_boundary"})]}),"\n",(0,s.jsxs)(t.li,{children:["changed the ",(0,s.jsx)(t.code,{children:"divisions"})," property to ",(0,s.jsx)(t.code,{children:"division_ids"})]}),"\n"]})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["added the ",(0,s.jsx)(t.code,{children:"dependency"})," subtype to the division and division_area feature types"]}),"\n",(0,s.jsxs)(t.li,{children:["added the ",(0,s.jsx)(t.code,{children:"microhood"})," subtype to the division feature type"]}),"\n",(0,s.jsxs)(t.li,{children:["added to the division feature type a ",(0,s.jsxs)(t.a,{href:"https://github.com/OvertureMaps/schema/pull/225",children:[(0,s.jsx)(t.code,{children:"capital_of_divisions"})," property"]}),", an object that will refer to the division IDs of the countries, regions, counties, etc"]}),"\n",(0,s.jsx)(t.li,{children:"made incremental improvements to the data"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Places"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"changed the schema to allow for NULL categories"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Transportation"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"removed deprecated road column"}),"\n",(0,s.jsx)(t.li,{children:"added rail segments (just geometries for now)"}),"\n",(0,s.jsx)(t.li,{children:"resolved most schema validation issues"}),"\n",(0,s.jsx)(t.li,{children:"added language tag filtering and normalizing"}),"\n",(0,s.jsxs)(t.li,{children:["fixed missing LR values for ",(0,s.jsx)(t.code,{children:"road_flags"})]}),"\n",(0,s.jsx)(t.li,{children:"fixed bugs in vehicle constraint and max speed properties"}),"\n",(0,s.jsx)(t.li,{children:"made incremental improvements to the data"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"attribution",children:"Attribution"}),"\n",(0,s.jsxs)(t.p,{children:["You'll find information about attribution and licensing ",(0,s.jsx)(t.a,{href:"https://docs.overturemaps.org/attribution/",children:"here"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},19365:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});n(96540);var s=n(18215);const r={tabItem:"tabItem_Ymn6"};var a=n(74848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,i),hidden:n,children:t})}},11470:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var s=n(96540),r=n(18215),a=n(23104),i=n(56347),l=n(205),d=n(57485),o=n(31682),c=n(89466);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:r}}=e;return{value:t,label:n,attributes:s,default:r}}))}(n);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=u(e),[i,d]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:a}))),[o,h]=m({queryString:n,groupId:r}),[g,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,c.Dv)(n);return[r,(0,s.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),x=(()=>{const e=o??g;return p({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{x&&d(x)}),[x]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),f(e)}),[h,f,a]),tabValues:a}}var f=n(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(74848);function b(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:l}=e;const d=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),c=e=>{const t=e.currentTarget,n=d.indexOf(t),r=l[n].value;r!==s&&(o(t),i(r))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>d.push(e),onKeyDown:h,onClick:c,...a,className:(0,r.A)("tabs__item",x.tabItem,a?.className,{"tabs__item--active":s===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function y(e){const t=g(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,v.jsx)(b,{...t,...e}),(0,v.jsx)(j,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,v.jsx)(y,{...e,children:h(e.children)},String(t))}},97577:(e,t,n)=>{n.d(t,{A:()=>i});var s=n(21432),r=n(44586),a=n(74848);function i(e){const{siteConfig:{customFields:t}}=(0,r.A)();var n=e.query.replace("__OVERTURE_RELEASE",t.overtureRelease);n=n.replace("__ATHENA_OVERTURE_RELEASE","v"+t.overtureRelease.replaceAll(".","_").replaceAll("-","_"));var i=e.language||"sql";return(0,a.jsx)(s.default,{language:i,title:e.title,children:n})}}}]);