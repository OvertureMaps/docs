"use strict";(self.webpackChunkoverture_documentation=self.webpackChunkoverture_documentation||[]).push([[499],{5736:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>h});var i=t(5893),s=t(1151),o=t(9965),r=t(4996);const a={title:"Travel modes"},l=void 0,d={id:"guides/transportation/travel-modes",title:"Travel modes",description:"In the real world, a travel mode can be thought of intuitively as a way",source:"@site/docs/guides/transportation/travel-modes.mdx",sourceDirName:"guides/transportation",slug:"/guides/transportation/travel-modes",permalink:"/guides/transportation/travel-modes",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Travel modes"},sidebar:"docs",previous:{title:"Roads",permalink:"/guides/transportation/roads"},next:{title:"Shape and connectivity",permalink:"/guides/transportation/shape-connectivity"}},c={},h=[{value:"Understanding travel modes",id:"understanding-travel-modes",level:2},{value:"Implied travel modes",id:"implied-travel-modes",level:3},{value:"General definitions",id:"general-definitions",level:3},{value:"When is a travel mode recognized?",id:"when-is-a-travel-mode-recognized",level:3},{value:"Travel mode schema",id:"travel-mode-schema",level:2},{value:"Scoping to travel modes",id:"scoping-to-travel-modes",level:3},{value:"Travel mode scoping: <code>mode</code>",id:"travel-mode-scoping-mode",level:4},{value:"Vehicle attribute scoping: <code>vehicle</code>",id:"vehicle-attribute-scoping-vehicle",level:4},{value:"Similar scoping properties: <code>using</code> and <code>recognized</code>",id:"similar-scoping-properties-using-and-recognized",level:4},{value:"The travel modes taxonomy",id:"the-travel-modes-taxonomy",level:3},{value:"Open questions",id:"open-questions",level:2},{value:"Minimum required travel modes",id:"minimum-required-travel-modes",level:3},{value:"Should we support extension travel modes?",id:"should-we-support-extension-travel-modes",level:3},{value:"Internal consistency",id:"internal-consistency",level:3}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"In the real world, a travel mode can be thought of intuitively as a way\nof getting from point A to point B. Travel modes can include non-vehicle\nmodes (foot), vehicle modes (a bicycle or motor vehicle) and\noccasionally more granular details (that motor vehicle might be\nclassified as a high occupancy vehicle or a heavy goods vehicle)."}),"\n",(0,i.jsxs)(n.p,{children:["Within the Overture Maps transportation theme schema model, this real-world\nintuition translates to the following definition: a travel mode is a\nrecognized mode by which a person or thing may use a ",(0,i.jsx)(n.a,{href:"https://docs.overturemaps.org/schema/reference/transportation/segment",children:"segment"})," feature."]}),"\n",(0,i.jsx)(n.h2,{id:"understanding-travel-modes",children:"Understanding travel modes"}),"\n",(0,i.jsx)(n.h3,{id:"implied-travel-modes",children:"Implied travel modes"}),"\n",(0,i.jsxs)(n.p,{children:["Every segment has an ",(0,i.jsx)(n.em,{children:"implied"})," set of travel modes that are allowed to use the segment. For ",(0,i.jsx)(n.a,{href:"/guides/transportation/roads",children:"road"})," segments, this implied set derives\nfrom the ",(0,i.jsx)(n.a,{href:"/guides/transportation/roads#road-class",children:"road class"}),", as well as local rules, norms, and customs operative where the road segment is situated."]}),"\n",(0,i.jsx)(n.p,{children:"Since this implied set depends on locality or jurisdiction, and is\nsusceptible of varying over time, the Overture Maps transportation schema\ndoes not try to specify the implied set. Resolution of the implied set\nis done by the specific application in the case where this level of\ndetail is important for its proper functioning. Note: an accurate routing\nengine may need this information, whereas a 2D map render or a geocoder\nlikely do not."}),"\n",(0,i.jsx)(n.h3,{id:"general-definitions",children:"General definitions"}),"\n",(0,i.jsxs)(n.p,{children:["Overture's recognized travel modes are defined in general terms that are\nbroadly applicable, for example ",(0,i.jsx)(n.code,{children:"hov"})," is a high-occupancy vehicle and\n",(0,i.jsx)(n.code,{children:"hgv"})," is a heavy goods vehicle. In most jurisdictions, these general\nterms map to a concept that is in use within the jurisdiction, even\nthough the local name for the concept may vary, for example one\njurisdiction may say heavy goods vehicle and another may say\nlarge goods vehicle."]}),"\n",(0,i.jsx)(n.p,{children:"Despite being broadly applicable, travel modes may have different\ndefinitions in different places and at different times."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["in one jurisdiction, an ",(0,i.jsx)(n.code,{children:"hgv"})," might mean any vehicle with a gross\nvehicle weight in excess of 3.5 tonnes (3,500 kg). In another place,\nan ",(0,i.jsx)(n.code,{children:"hgv"})," might have a gross vehicle weight of at least 10,001 lbs."]}),"\n",(0,i.jsxs)(n.li,{children:["in one jurisdiction, an ",(0,i.jsx)(n.code,{children:"hov"})," might require a minimum of 2 passengers\nwhile in another place it might have a higher minimum passenger count,\nor include battery-electric vehicles, or exclude certain classes of\nvehicle or usage."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"As a consequence of the variance in definition across place and time,\nOverture gives only general definitions for travel modes, leaving\nprecise definition to those applications that require them."}),"\n",(0,i.jsx)(n.h3,{id:"when-is-a-travel-mode-recognized",children:"When is a travel mode recognized?"}),"\n",(0,i.jsxs)(n.p,{children:["A travel mode is recognized by the Overture transportation schema when\nit becomes part of the ",(0,i.jsx)(n.a,{href:"https://github.com/OvertureMaps/schema/blob/5f82f1d6a916031cb32730e1fac7e1a353f10c60/schema/transportation/segment.yaml#L103",children:(0,i.jsx)(n.code,{children:"mode"})}),"\nenumeration. This enumeration in early versions of the schema was relatively small and contained only travel modes that are generally-applicable both across jurisdictions and over time. As development of the schema has progressed, this list has grown and will to continue to expand as the world changes and new information arises."]}),"\n",(0,i.jsx)(n.p,{children:"Our criteria for recognizing a proposed new travel mode are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"the proposed new travel mode should represent a generally-accepted\nconcept meaning that the concept exists in many places with roughly\nthe same definition."}),"\n",(0,i.jsx)(n.li,{children:"the proposed new travel mode should be referred to with well-known\nsign iconography or sign text in those jurisdictions where the\nconcept exists; and this iconography or sign text is preferably\nsomewhat consistent across many jurisdictions and over time."}),"\n",(0,i.jsxs)(n.li,{children:["it must be possible to give a relatively precise definition to the\nproposed new travel mode and explain how it differs from, or\n",(0,i.jsx)(n.em,{children:"intersects"})," with, other similar travel modes which are already\nrecognized in the Overture schema."]}),"\n",(0,i.jsxs)(n.li,{children:["the proposed new travel mode should preferably not be trivially\nexpressible using another existing ",(0,i.jsx)(n.a,{href:"/guides/feature-model/scoping-rules#scoped-values-and-scoping-properties",children:"scoping property"}),".(",(0,i.jsxs)(n.em,{children:["An example of such a trivially-expressible concept might be a three-axle vehicle which is more appropriately phrased as ",(0,i.jsx)(n.code,{children:"vehicle: { axle_count: { is_equal_to: 3 } }"}),"."]}),")"]}),"\n",(0,i.jsx)(n.li,{children:"the proposed new travel mode must be supported by existing data in at\nleast one of Overture's upstream data sources."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["There is a risk that the above-described approach will be too slow to\nadapt to our users' needs in a vast, ever-changing world. One possible\navenue to mitigate this risk is supporting ",(0,i.jsx)(n.a,{href:"#should-we-support-extension-travel-modes",children:"custom extensions"})," to the built-in list of recognized travel modes."]}),"\n",(0,i.jsx)(n.h2,{id:"travel-mode-schema",children:"Travel mode schema"}),"\n",(0,i.jsx)(n.h3,{id:"scoping-to-travel-modes",children:"Scoping to travel modes"}),"\n",(0,i.jsxs)(n.p,{children:["Travel modes can be used to change the scope of scoped and rule-based\nproperties within the schema. For example, they can affect the scope of access restrictions, turn restrictions, or speed limits on ",(0,i.jsx)(n.a,{href:"/guides/transportation/roads",children:"road"})," segments. Since travel modes are expressed via scoping properties, we recommend you read the section on ",(0,i.jsx)(n.a,{href:"/guides/feature-model/scoping-rules",children:"scoped and rule-based properties"})," before proceeding further."]}),"\n",(0,i.jsxs)(n.h4,{id:"travel-mode-scoping-mode",children:["Travel mode scoping: ",(0,i.jsx)(n.code,{children:"mode"})]}),"\n",(0,i.jsxs)(n.p,{children:["The scoping property ",(0,i.jsx)(n.code,{children:"mode"})," controls whether a given scoped property\napplies when a given travel mode is being used for traveling along a\nroad segment."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"mode"})," is provided, it must be a non-empty array of string values\nidentifying travel modes, and is interpreted as a set. Values must be\nunique, but order is not important."]}),"\n",(0,i.jsxs)(n.h4,{id:"vehicle-attribute-scoping-vehicle",children:["Vehicle attribute scoping: ",(0,i.jsx)(n.code,{children:"vehicle"})]}),"\n",(0,i.jsxs)(n.p,{children:["Because travel modes are an fuzzy concept, there are inevitably areas\nof overlap between with the more precise, but more limited, ",(0,i.jsx)(n.code,{children:"vehicle"}),"\nscoping property which is used for ",(0,i.jsx)(n.a,{href:"/guides/feature-model/scoping-rules#vehicle-attributes-scoping",children:"vehicle attributes scoping"}),". Where there is potential overlap, the method of scoping used in Overture Maps data releases will depend on how the upstream data source has expressed the equivalent concept. Where there is choice, it is preferable to select the scoping method that most accurately reflects the intention expressed on local signage."]}),"\n",(0,i.jsxs)(n.h4,{id:"similar-scoping-properties-using-and-recognized",children:["Similar scoping properties: ",(0,i.jsx)(n.code,{children:"using"})," and ",(0,i.jsx)(n.code,{children:"recognized"})]}),"\n",(0,i.jsxs)(n.p,{children:["The scoping properties ",(0,i.jsx)(n.code,{children:"using"})," and ",(0,i.jsx)(n.code,{children:"recognized"})," express concepts that\nare meant to be orthogonal to (completely separate from) travel modes."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"using"})," property indicates ",(0,i.jsx)(n.a,{href:"/guides/feature-model/scoping-rules#purpose-of-use-scoping",children:"purpose of use"})," scoping, which relates to the purpose for which the person or thing travelling is using a given segment of the transportation network. Travel modes should ideally not embed a purpose of use."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"recognized"})," property indicates ",(0,i.jsx)(n.a,{href:"/guides/feature-model/scoping-rules#status-scoping-membership-in-a-recognized-group",children:"status scoping"}),", which relates to a recognized status given to the person or thing traveling, where the recognized status is distinct from the mode of travel itself. Travel modes should ideally not embed a status."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"the-travel-modes-taxonomy",children:"The travel modes taxonomy"}),"\n",(0,i.jsxs)(n.p,{children:["Travel modes in Overture Maps form a shallow taxonomy. Some travel modes are\nmore general, while others are more specific, and a more general travel\nmode may contain a more specific one. For example, the general travel\nmode ",(0,i.jsx)(n.code,{children:"vehicle"})," contains the more specific mode ",(0,i.jsx)(n.code,{children:"motor_vehicle"}),". The\ntaxonomy supported in our draft schema ",(0,i.jsx)(n.code,{children:"v0.8.0"})," can be visualized in the\ndiagram below."]}),"\n",(0,i.jsxs)("figure",{children:[(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)(o.Z,{alt:"Overture travel modes taxonomy",sources:{light:(0,r.Z)("/img/transportation/travel-modes-light.png"),dark:(0,r.Z)("/img/transportation/travel-modes-dark.png")}})}),(0,i.jsx)("figcaption",{children:(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"The Overture travel modes taxonomy."})})})})]}),"\n",(0,i.jsxs)(n.p,{children:["As many of the above travel modes draw on the body of knowledge\naccumulated in relation to OpenStreetMap\n",(0,i.jsx)(n.a,{href:"https://wiki.openstreetmap.org/wiki/Key:access#Transport_mode_restrictions",children:"transport mode access restrictions"}),",\nOverture Maps would like acknowledge a intellectual debt to the OSM community in\nrelation to travel modes as well as to other aspects of the transportation schema."]}),"\n",(0,i.jsx)(n.h2,{id:"open-questions",children:"Open questions"}),"\n",(0,i.jsxs)(n.p,{children:["This section discusses some open questions we are debating internally with\nregard to travel modes. We would love to hear ",(0,i.jsx)(n.a,{href:"https://github.com/OvertureMaps/schema/discussions",children:"your feedback"})," on these questions and any others you may have."]}),"\n",(0,i.jsx)(n.h3,{id:"minimum-required-travel-modes",children:"Minimum required travel modes"}),"\n",(0,i.jsx)(n.p,{children:"We're not yet certain on the minimum set of recognized travel modes is\nthat will make the Overture Transportation schema as usable as possible\nto as broad an audience as possible. What do you think we are missing?"}),"\n",(0,i.jsx)(n.h3,{id:"should-we-support-extension-travel-modes",children:"Should we support extension travel modes?"}),"\n",(0,i.jsx)(n.p,{children:"We live in a time of rapid technological and regulatory change in\nthe transportation space. No matter how quickly we extend the travel modes in the Overture Maps schema it will always be behind the real world with regard to some technologies, customs, or local rules."}),"\n",(0,i.jsxs)(n.p,{children:["One way to support users working at the cutting edge is to allow custom extensions to\nthe list of travel modes. If we did this consistently with how extension\nproperties\nwork for features, we could, for example, allow travel mode names with\nthe ",(0,i.jsx)(n.code,{children:"ext_*"})," to be ignored by the schema validation rules."]}),"\n",(0,i.jsx)(n.h3,{id:"internal-consistency",children:"Internal consistency"}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.a,{href:"#vehicle-attribute-scoping-vehicle",children:"another section of this documentation"}),", we alluded to an overlap between the fuzzy concept of travel modes and vehicle attribute\nscoping. We're aware of this overlap and view it as limited but inevitable."]}),"\n",(0,i.jsxs)(n.p,{children:["Our intention is to reduce or eliminate the overlap between travel modes and the other ",(0,i.jsx)(n.a,{href:"#similar-scoping-properties-using-and-recognized",children:"similar scoping properties"}),"\n(",(0,i.jsx)(n.code,{children:"using"})," and ",(0,i.jsx)(n.code,{children:"recognized"}),"). One area where we may have been unsuccessful\nis the ",(0,i.jsx)(n.code,{children:"emergency"})," travel mode in the ",(0,i.jsx)(n.a,{href:"#the-travel-modes-taxonomy",children:"current taxonomy"}),".\nArguably, ",(0,i.jsx)(n.code,{children:"emergency"})," should be removed from the taxonomy, and an\n",(0,i.jsx)(n.code,{children:"as_emergency_responder"})," should be included in the status values enumeration for the ",(0,i.jsx)(n.code,{children:"recognized"})," property."]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var i=t(7294);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);